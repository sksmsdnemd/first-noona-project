<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="comboBoxCode"> 
    <typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap" />
   	
 	<!-- 회사아이디 -->  
	<select id="comboBoxCode.getTenantList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getTenantList */
		select tenant_id code, tenant_name code_nm
		FROM tb_mng_company
        where expire_date is null
           or expire_date = ''
		order by tenant_name
	</select>	

		<!-- 그룹아이디 -->
	<select id="comboBoxCode.getGroupList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getGroupList */
		with recursive re_cate AS (
			select 1 level
				 , row_number() over(order by group_id) as top_order
				 , group_id
				 , parent_id
				 , group_name
				 , group_id as id_path
			  from tb_mng_group
			 where tenant_id = #findTenantId#
			<isNotEmpty property="controlAuth">
			   and group_id in (
				select g.group_id
				  from tb_mng_group g
				 inner join tb_mng_userinfo u
					on g.tenant_id = u.tenant_id
				   and instr(concat(',', control_auth, ','), concat(',', g.group_id, ',')) > 0
				   and u.user_id = #userId#
				   and u.tenant_id = #findTenantId#
			   )
			 union all
			select c.level + 1
				 , c.top_order AS top_order
				 , b.group_id
				 , b.parent_id
				 , b.group_name
				 , concat(c.id_path, '>', b.group_id)
			  from tb_mng_group b
			 inner join re_cate c
				on b.tenant_id = #findTenantId#
			   and c.group_id = b.parent_id
			</isNotEmpty>
			<isEmpty property="controlAuth">
				<isEmpty property="grantId">
			   and parent_id = '0'
				</isEmpty>
				<isNotEmpty property="grantId">
					<isEqual property="grantId" compareValue="SuperAdmin">
			   and parent_id = '0'
					</isEqual>
					<isEqual property="grantId" compareValue="Manager">
			   and parent_id = '0'
					</isEqual>
					<isEqual property="grantId" compareValue="GroupManager">
			   and group_id = ( select group_id from tb_mng_userinfo where user_id = #userId# and tenant_id = #findTenantId# )
					</isEqual>
					<isEqual property="grantId" compareValue="Agent">
			   and group_id = ( select group_id from tb_mng_userinfo where user_id = #userId# and tenant_id = #findTenantId# )
					</isEqual>
					<isNotEqual property="grantId" compareValue="Agent">
			 union all
			select c.level + 1
				 , c.top_order AS top_order
				 , b.group_id
				 , b.parent_id
				 , b.group_name
				 , concat(c.id_path, '>', b.group_id)
			  from tb_mng_group b
			 inner join re_cate c
				on b.tenant_id = #findTenantId#
			   and c.group_id = b.parent_id
					</isNotEqual>
				</isNotEmpty>
			</isEmpty>
		)
		select group_id AS code
			 , concat(REPEAT( <![CDATA['&nbsp;&nbsp;' ]]>, level - 1), group_name) as code_nm
		  from re_cate
		 order by top_order, id_path
	</select>
    <!-- 그룹아이디 -->
    <select id="comboBoxCode.getGroupList_org" parameterClass="java.util.HashMap" resultClass="egovMap">
        /* ID : comboBoxCode.getGroupList */
			<isNotEmpty property="grantId">
				<isEqual property="grantId" compareValue="GroupManager">  
					and depth in 
						(
						select g.depth
							from tb_mng_group g,
								(
								select depth from tb_mng_group g, tb_mng_userinfo u
								where g.tenant_id = u.tenant_id
									/*and g.group_id = u.group_id*/
									and instr(CONCAT(',', control_auth, ','), CONCAT(',', g.depth, ',')) > 0
									and u.user_id = #userId#
									and u.tenant_id = #findTenantId#
								) c
						where g.depth LIKE CONCAT(c.depth, '%')
							and tenant_id = #findTenantId#
					)
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="controlAuth">
				<isNotEqual property="grantId" compareValue="GroupManager">  
					and depth in 
						(
						select g.depth
							from tb_mng_group g,
								(
								select depth from tb_mng_group g, tb_mng_userinfo u
								where g.tenant_id = u.tenant_id
									/*and instr(CONCAT(',', g.depth, ','), CONCAT(',', control_auth, ',')) > 0*/
									and instr(CONCAT(',', control_auth, ','), CONCAT(',', g.depth, ',')) > 0
									and u.user_id = #userId#
									and u.tenant_id = #findTenantId#
								) c
						where g.depth LIKE CONCAT(c.depth,  '%')
							and tenant_id = #findTenantId#
						)
				</isNotEqual>
			</isNotEmpty>
		order by depth
	</select>
	
	<!-- 그룹아이디 하위포함 -->
	<select id="comboBoxCode.getGroupDepthList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getGroupDepthList */
		select 
				CONCAT(group_id, '_', depth) code 
				, replace(CONCAT(lpad('-|', (length(depth)-1)*2, '-|'), group_name) ,'-|',<![CDATA[ '&nbsp;&nbsp;' ]]>) code_nm
			FROM tb_mng_group
		where tenant_id = #findTenantId#
			<isNotEmpty property="grantId">
				<isEqual property="grantId" compareValue="GroupManager">  
					and depth in 
						(
						select g.depth
							from tb_mng_group g,
								(
								select depth from tb_mng_group g, tb_mng_userinfo u
								where g.tenant_id = u.tenant_id
									/*and g.group_id = u.group_id*/
									and instr(CONCAT(',', control_auth, ','), CONCAT(',', g.depth, ',')) > 0
									and u.user_id = #userId#
									and u.tenant_id = #findTenantId#
								) c
						where g.depth LIKE CONCAT(c.depth, '%')
							and tenant_id = #findTenantId#
						)
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="controlAuth">
				<isNotEqual property="grantId" compareValue="GroupManager">  
					and depth in 
						(
						select g.depth
							from tb_mng_group g,
								(
								select depth from tb_mng_group g, tb_mng_userinfo u
								where g.tenant_id = u.tenant_id
									/*and instr(CONCAT(',', g.depth, ','), CONCAT(',', control_auth, ',')) > 0*/
									and instr(CONCAT(',', control_auth, ','), CONCAT(',', g.depth, ',')) > 0
									and u.user_id = #userId#
									and u.tenant_id = #findTenantId#
								) c
						where g.depth LIKE CONCAT(c.depth, '%')
							and tenant_id = #findTenantId#
						)
				</isNotEqual>
			</isNotEmpty>
		order by depth
	</select>
	
	<!-- 그룹아이디(depth) -->
	<select id="comboBoxCode.getDepthGroupList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getDepthGroupList */
		select depth code, replace(CONCAT(lpad('-|', (length(depth)-1)*2, '-|'), group_name) ,'-|',<![CDATA[ '&nbsp;&nbsp;' ]]>) code_nm
			FROM tb_mng_group
		where tenant_id = #findTenantId#
			<isNotEmpty property="grantId">
				<isEqual property="grantId" compareValue="GroupManager">  
					and depth in 
						(
						select g.depth
							from tb_mng_group g,
								(
								select depth from tb_mng_group g, tb_mng_userinfo u
								where g.tenant_id = u.tenant_id
									/*and g.group_id = u.group_id*/
									and instr(CONCAT(',', control_auth, ','), CONCAT(',', g.depth, ',')) > 0
									and u.user_id = #userId#
									and u.tenant_id = #findTenantId#
								) c
						where g.depth LIKE CONCAT(c.depth, '%')
							and tenant_id = #findTenantId#
						)
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="controlAuth">
				<isNotEqual property="grantId" compareValue="GroupManager">  
					and depth in 
						(
						select g.depth
							from tb_mng_group g,
								(
								select depth from tb_mng_group g, tb_mng_userinfo u
								where g.tenant_id = u.tenant_id
									/*and instr(CONCAT(',', g.depth, ','), CONCAT(',', control_auth, ',')) > 0*/
									and instr(CONCAT(',', control_auth, ','), CONCAT(',', g.depth, ',')) > 0
									and u.user_id = #userId#
									and u.tenant_id = #findTenantId#
								) c
						where g.depth LIKE CONCAT(c.depth, '%')
							and tenant_id = #findTenantId#
						)
				</isNotEqual>
			</isNotEmpty>
		order by depth
	</select>
	
	<!-- 그룹 목록 -->
	<select id="comboBoxCode.getGroupListByParentCnt" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getGroupListByParentCnt */
		SELECT
			  COUNT(*) AS CNT
			FROM
			  tb_mng_group A INNER JOIN
			  (
			    SELECT 
			      TENANT_ID, PARENT_ID, COUNT(*) AS CNT
			    FROM tb_mng_group
			    WHERE ((#parentId# IS NULL OR #parentId# = '') AND DEPTH = 'A') OR  
			          ((#parentId# IS NOT NULL AND #parentId# != '') AND PARENT_ID IN (
			                        SELECT 
			                          GROUP_ID AS PARENT_ID 
			                        FROM 
			                          tb_mng_group 
			                        WHERE PARENT_ID = #parentId# AND (((#tenantId# IS NULL OR #tenantId# = '') AND 1=1) OR ((#tenantId# IS NOT NULL AND #tenantId# != '') AND TENANT_ID = #tenantId#))))
			    GROUP BY TENANT_ID, PARENT_ID
			  ) B
			  ON A.TENANT_ID = B.TENANT_ID AND A.PARENT_ID = B.PARENT_ID
			WHERE
			  ((#tenantId# IS NULL OR #tenantId# = '') AND 1=1) OR ((#tenantId# IS NOT NULL AND #tenantId# != '') AND A.TENANT_ID = #tenantId#)
	</select>
	
	<!-- 그룹 목록 -->
	<select id="comboBoxCode.getGroupListByParent" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getGroupListByParent */
		SELECT
			  GROUP_ID, GROUP_NAME
			FROM
			  tb_mng_group A INNER JOIN
			  (
			    SELECT 
			      TENANT_ID, PARENT_ID, COUNT(*) AS CNT
			    FROM tb_mng_group
			    WHERE ((#parentId# IS NULL OR #parentId# = '') AND DEPTH = 'A') OR  
			          ((#parentId# IS NOT NULL AND #parentId# != '') AND PARENT_ID IN (
			                        SELECT 
			                          GROUP_ID AS PARENT_ID 
			                        FROM 
			                          tb_mng_group 
			                        WHERE PARENT_ID = #parentId# AND (((#tenantId# IS NULL OR #tenantId# = '') AND 1=1) OR ((#tenantId# IS NOT NULL AND #tenantId# != '') AND TENANT_ID = #tenantId#))))
			    GROUP BY TENANT_ID, PARENT_ID
			  ) B
			  ON A.TENANT_ID = B.TENANT_ID AND A.PARENT_ID = B.PARENT_ID
			WHERE
			  ((#tenantId# IS NULL OR #tenantId# = '') AND 1=1) OR ((#tenantId# IS NOT NULL AND #tenantId# != '') AND A.TENANT_ID = #tenantId#)
	</select>
	
	
	<select id="comboBoxCode.getControlAuthList_org" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getControlAuthList */
		select depth code, replace(CONCAT(lpad('-|', (length(depth)-1)*2, '-|'), group_name),'-|',<![CDATA[ '&nbsp;&nbsp;' ]]>) code_nm
		
			FROM tb_mng_group
		where tenant_id = #findTenantId#
			<isNotEmpty property="grantId">
				<isEqual property="grantId" compareValue="GroupManager">  
					and depth in 
						(
						select g.depth
							from tb_mng_group g,
								(
								select depth from tb_mng_group g, tb_mng_userinfo u
								where g.tenant_id = u.tenant_id
									/*and g.group_id = u.group_id*/
									and instr(CONCAT(',', control_auth, ','), CONCAT(',', g.depth, ',')) > 0
									and u.user_id = #userId#
									and u.tenant_id = #findTenantId#
								) c
						where g.depth LIKE CONCAT(c.depth, '%')
							and tenant_id = #findTenantId#
						)
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="controlAuth">
				<isNotEqual property="grantId" compareValue="GroupManager">  
					and depth in 
						(
						select g.depth
							from tb_mng_group g,
								(
								select depth from tb_mng_group g, tb_mng_userinfo u
								where g.tenant_id = u.tenant_id
									/*and instr(CONCAT(',', g.depth, ','), CONCAT(',', control_auth, ',')) > 0*/
									and instr(CONCAT(',', control_auth, ','), CONCAT(',', g.depth, ',')) > 0
									and u.user_id = #userId#
									and u.tenant_id = #findTenantId#
								) c
						where g.depth LIKE CONCAT(c.depth, '%')
							and tenant_id = #findTenantId#
						)
				</isNotEqual>
			</isNotEmpty>
		order by depth
	</select>
	
	<select id="comboBoxCode.getControlAuthList" parameterClass="java.util.HashMap" resultClass="egovMap">
        with recursive re_cate AS (
			select 1 level
				 , row_number() over() as top_order
				 , a.*
				 , a.group_id as id_path
			 from tb_mng_group a
			 where tenant_id = #findTenantId#
			 and parent_id = '0'
			 union all
			 select c.level + 1
				 , c.top_order AS top_order
				 , b.*
				 , concat(c.id_path, '>', b.group_id)
			  from tb_mng_group b
			 inner join re_cate c
				on b.tenant_id = #findTenantId#
			   and c.group_id = b.parent_id
		)
		select 
			group_id AS code
			 , concat(REPEAT(<![CDATA['&nbsp;&nbsp;']]>, level - 1), group_name) as code_nm
		from re_cate
		order by top_order, id_path
    </select>
	<!-- 제어그룹에서 dept가 아닌 group id로 받기 -->
	<select id="comboBoxCode.getControlAuthCodeList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getControlAuthCodeList */
		select group_id code, replace(CONCAT(lpad('-|', (length(depth)-1)*2, '-|'), group_name),'-|',<![CDATA[ '&nbsp;&nbsp;' ]]>) code_nm
		
			FROM tb_mng_group
		where tenant_id = #findTenantId#
			<isNotEmpty property="grantId">
				<isEqual property="grantId" compareValue="GroupManager">  
					and depth in 
						(
						select g.group_id, g.depth
							from tb_mng_group g,
								(
								select group_id, depth from tb_mng_group g, tb_mng_userinfo u
								where g.tenant_id = u.tenant_id
									/*and g.group_id = u.group_id*/
									and instr(CONCAT(',', control_auth, ','), CONCAT(',', g.depth, ',')) > 0
									and u.user_id = #userId#
									and u.tenant_id = #findTenantId#
								) c
						where g.depth LIKE CONCAT(c.depth, '%')
							and tenant_id = #findTenantId#
						)
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="controlAuth">
				<isNotEqual property="grantId" compareValue="GroupManager">  
					and depth in 
						(
						select g.group_id, g.depth
							from tb_mng_group g,
								(
								select group_id, depth from tb_mng_group g, tb_mng_userinfo u
								where g.tenant_id = u.tenant_id
									/*and instr(CONCAT(',', g.depth, ','), CONCAT(',', control_auth, ',')) > 0*/
									and instr(CONCAT(',', control_auth, ','), CONCAT(',', g.depth, ',')) > 0
									and u.user_id = #userId#
									and u.tenant_id = #findTenantId#
								) c
						where g.depth LIKE CONCAT(c.depth, '%')
							and tenant_id = #findTenantId#
						)
				</isNotEqual>
			</isNotEmpty>
		order by depth
	</select>
	
	<!-- 사용자아이디 -->
	<select id="comboBoxCode.getUserListByGroup" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getUserListByGroup */
		select user_id code, CONCAT(user_name, '-', user_id) code_nm 
			FROM tb_mng_userinfo
		where tenant_id = #findTenantId#	
				and group_id = #findGroupId# 
		order by user_name
	</select>
	
	
	<!-- 사용자아이디 -->
	<select id="comboBoxCode.getUserCodeList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getUserCodeList */
		select user_id code, CONCAT(user_name, '(', user_id, ')') code_nm 
			FROM tb_mng_userinfo
		where tenant_id = #findTenantId#	
				and group_id = #findGroupId# 
		order by user_name
	</select>	
	
	<select id="comboBoxCode.getUserListDetail" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getUserListDetail */
        select A.user_id,
               A.group_id,
               A.user_name,
               B.group_name
        FROM tb_mng_userinfo A
                 INNER JOIN
             tb_mng_group B
             ON A.group_id = B.group_id
                 AND B.tenant_id = #findTenantId#
        where ((#findTenantId# IS NULL AND 1 = 1) OR (#findTenantId# IS NOT NULL AND A.TENANT_ID = #findTenantId#))
          AND ((#findGroupId# IS NULL AND 1 = 1) OR (#findGroupId# IS NOT NULL AND A.GROUP_ID = #findGroupId#))
          AND ((#findUserName# IS NULL AND 1 = 1) OR (#findUserName# IS NOT NULL AND A.USER_Name = #findUserName#))
        order by A.user_name
	</select>
	
	<update id="comboBoxCode.updateUserAuth" parameterClass="java.util.HashMap">
		/* ID : comboBoxCode.updateUserAuth */
		UPDATE tb_mng_userinfo
		SET CONTROL_AUTH = #findControlAuth#
		WHERE 
		    TENANT_ID = #findTenantId#
		AND USER_ID = #userid#
	</update>
	
	<update id="comboBoxCode.updateUserAuth_" parameterClass="java.util.HashMap">
		/* ID : comboBoxCode.updateUserAuth */
		UPDATE tb_mng_userinfo
		SET CONTROL_AUTH = CASE 
								WHEN CONTROL_AUTH IS NOT NULL AND CONTROL_AUTH != '' THEN CONCAT(CONTROL_AUTH, ',', #findControlAuth#)
								ELSE #findControlAuth#
							END
		WHERE 
		    TENANT_ID = #findTenantId#
		AND USER_ID = #userid#
	</update>
	
	<!-- 사용자아이디 -->
	<select id="comboBoxCode.getUserList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getUserList */
		select user_id code, CONCAT(user_name, '-', user_id) code_nm 
			FROM tb_mng_userinfo
		where tenant_id = #findTenantId#	
			<isNotEmpty property="findGroupId"> 
				and group_id = lpad(#findGroupId#, instr(#findGroupId#, '_') - 1, ' ') 
			</isNotEmpty> 	
		order by user_name
	</select>	
	
	<select id="comboBoxCode.TEST" parameterClass="java.util.HashMap" resultClass="egovMap">
			select USER_ID
				FROM tb_mng_userinfo
			where USER_ID IN ($userList$)
		</select>
	
	<!-- 사용자아이디 -->
	<select id="comboBoxCode.getUserList_Parentheses" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getUserList_Parentheses */
		select user_id code, CONCAT(user_name, '(', user_id, ')') code_nm 
			FROM tb_mng_userinfo
		where tenant_id = #findTenantId#	
			<isNotEmpty property="findGroupId"> 
				and group_id = lpad(#findGroupId#, instr(#findGroupId#, '_') - 1) 
			</isNotEmpty> 	
		order by user_name
	</select>	
       
    <!-- 마킹코드 -->
	<select id="comboBoxCode.getMarkCodeList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getMarkCodeList */
		select marking_id code, marking_class code_nm, marking_color
			FROM tb_rec_markcode
		where tenant_id = #findTenantId#
		order by marking_id, marking_class 
	</select>	
	       
	<!-- 시스템 아이디-->
	<!-- <select id="comboBoxCode.getSystemList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getSystemList */
		select system_id code, system_name code_nm
			FROM tb_sys_sysinfo
		order by system_name
	</select> -->
	
	<select id="comboBoxCode.getMruSystemList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getMruSystemList */  
		select distinct s.system_id code, system_name code_nm, process_name
			FROM tb_sys_sysinfo s, tb_sys_procinfo p
		where s.system_id = p.system_id
			and p.process_code='41'
		order by system_name
	</select>	
	<select id="comboBoxCode.getVssProcessList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getVssProcessList */
		select system_id, process_id 
			from tb_sys_procinfo
		where process_code = '43'
	</select>				
	<select id="comboBoxCode.getMruVssSystemList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getMruVssSystemList */
		<!-- select distinct s.system_id code, system_name code_nm, process_name -->
		select 
			distinct s.system_id code, system_name code_nm
		FROM tb_sys_sysinfo s, tb_sys_procinfo p
		where s.system_id = p.system_id
			and( p.process_code='41' or p.process_code= '43')
			and ifnull(s.system_id, 0) not in (select slave_system_id from tb_sys_procinfo where ifnull(slave_system_id, 0) > 0)
		order by system_name
	</select>				
	
	<!-- 시스템 코드 -->
	<select id="comboBoxCode.getSystemId" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getSystemId */
		select system_id code_nm, system_name code
			FROM tb_sys_sysinfo
		order by system_name
	</select>
	
	<!-- 시스템 이름 -->
	<select id="comboBoxCode.getSystemName" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getSystemName */
		select system_id code, system_name code_nm
			FROM tb_sys_sysinfo
		where system_id = #findSystemId#
		order by system_name
	</select>
	
	<!-- 프로세스 아이디 -->
	<select id="comboBoxCode.getProcessList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getProcessList */
		select process_id code, process_name code_nm
			FROM tb_sys_procinfo
		<isNotEmpty property="findSystemId"> where system_id = #findSystemId#
			<isNotEmpty property="findProcessName"> AND ( PROCESS_CODE = '41' OR PROCESS_CODE = '43')  </isNotEmpty>
		</isNotEmpty>
		order by process_name
	</select>
	
	<select id="comboBoxCode.getProcessList2" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getProcessList2 */
		select process_id code, CONCAT(process_name, '_', process_id) as code_nm
			FROM tb_sys_procinfo
		<isNotEmpty property="findSystemId"> where system_id = #findSystemId# 
			<isNotEmpty property="findProcessName"> and ( process_code = '41' or process_code = '43') and act_flag = 1   </isNotEmpty>
		</isNotEmpty>
		order by process_name
	</select>
	
	<select id="comboBoxCode.getProcessId" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getProcessId */
		select process_id code_nm, process_name code
			FROM tb_sys_procinfo
		order by process_name
	</select>
	
	<select id="comboBoxCode.getProcessName" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getProcessName */
		select process_id code, process_name code_nm
			FROM tb_sys_procinfo
		where process_id = #findProcessId#
		order by process_name
	</select>
		
    <!-- 권한코드 -->
	<select id="comboBoxCode.getGrantList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getGrantList */
		select grant_id code, grant_name code_nm
			FROM tb_mng_auth
		where tenant_id = #findTenantId#
		order by auth_rank
	</select>				 
			       
    <!-- OSU IP 추출 -->
	<select id="comboBoxCode.getOsuIpList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getOsuIpList */
		select system_ip code, system_id code_nm 
			from tb_sys_ipinfo
		where ip_use_item like '%82-1%'
	</select>				 

	<select id="comboBoxCode.getMfuIpList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getMfuIpList */
		SELECT CASE WHEN (DOMAIN_ADDR = '' OR DOMAIN_ADDR IS NULL) AND (MFU_IP = '' OR MFU_IP IS NULL) THEN SYSTEM_IP
        			WHEN (DOMAIN_ADDR = '' OR DOMAIN_ADDR IS NULL) AND (MFU_IP != '' OR MFU_IP IS NOT NULL) THEN MFU_IP
					ELSE DOMAIN_ADDR
			   END AS CODE
			 , SYSTEM_ID AS CODE_NM
			 , IP_NAT
		  FROM TB_SYS_IPINFO
		 WHERE IP_USE_ITEM LIKE '%62-1%'
		 LIMIT 1
	</select>				 
		
    <!-- MRS IP 추출 -->
	<!-- <select id="comboBoxCode.getMrsIpList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getMrsIpList */
		select system_ip code, system_id code_nm 
			from TB_SYS_IPINFO
		where ip_use_item like '%411-1%'
	</select> -->					       

    <!-- MRU Process 추출 -->
	<select id="comboBoxCode.getMruProcessList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getMruProcessList */
		select system_id, process_id 
			from tb_sys_procinfo
		where process_code = '41'
	</select>					       


    <!-- Dn play MRS IP 추출 -->
	<select id="comboBoxCode.getDnMrsIpList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getDnMrsIpList */
		select system_ip code, ip_desc code_nm, ACT_FLAG 
			from 
				(
				select system_id, process_id, ACT_FLAG
					from tb_sys_procinfo
				where system_id    = #findSystemId# 
					and process_id = #findProcessId#
					
				union all
				
				select system_id, process_id,ha_mode
					from tb_sys_procinfo
				where system_id    = (SELECT slave_system_id FROM tb_sys_procinfo WHERE system_id    = #findSystemId# 
					and process_id = #findProcessId#)
					and process_id = (select slave_process_id FROM tb_sys_procinfo WHERE system_id    = #findSystemId# 
					and process_id = #findProcessId#)
				) s, tb_sys_ipinfo i
		where s.system_id = i.system_id
			<!-- and ip_use_item like #findUseNat# -->
			and ip_use_item like '411-1%'
		order by ACT_FLAG DESC
	</select>					       

    <!-- 메뉴 추출 -->
	<select id="comboBoxCode.getMenuList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getMenuList */
		select 
				<isNotEmpty property="actionLog">
					menu_name code
				</isNotEmpty>
				<isEmpty property="actionLog">
					CONCAT('a_', depth1_id, '_', depth2_id, '_', depth3_id) code
				</isEmpty>
				, menu_name code_nm
			from tb_mng_menu
		where length(src_do) > 1
	</select>						       

    <!-- 메뉴 추출 -->
	<select id="comboBoxCode.getConfigValue" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getConfigValue */
		select val_cur code, key_code code_nm
			from tb_was_config
		where section    = #section# 
			and key_code = #keyCode#
	</select>
	
	<!-- 녹취파일복원 - 시스템 코드 -->
	<select id="comboBoxCode.getSystemRecFileValue" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : comboBoxCode.getSystemId */
		select system_id code_nm, system_name code
			FROM tb_sys_sysinfo
		order by system_name
	</select>	
	
	<!-- VSS,MRU -->
    <select id="comboBoxCode.getMruMruVSSIpList" parameterClass="java.util.HashMap" resultClass="egovMap">
        /* ID : comboBoxCode.getMruMruVSSList */
        select 
            ip.system_ip
        from tb_sys_procinfo pro
        inner join tb_sys_ipinfo ip
            on pro.sys_group_id = ip.sys_group_id and pro.system_id = ip.system_id
        where pro.process_code in ('43','41')
        group by system_ip
    </select>				       

    <!-- 프로세스 아이디 -->
    <select id="comboBoxCode.getSystemIdToProcessList" parameterClass="java.util.HashMap" resultClass="egovMap">
        /* ID : comboBoxCode.getSystemIdToProcessList */
        select process_id code, process_name code_nm
        FROM tb_sys_procinfo
        where system_id = #findSystemId#
        order by process_name
    </select>
</sqlMap>
