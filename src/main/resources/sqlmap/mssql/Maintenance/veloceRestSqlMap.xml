<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="veloceRest">
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap" />
	
	<insert id="rest.tenantInsert">
		/* ID : rest.tenantInsert */
		begin
			/* tenantRest : tenantInsert */
			insert into tb_mng_company (tenant_id, tenant_name, agent_count, manager_count, base_path, reg_date, ins_id, ins_date)
			values (#tenantId#, #tenantName#, #agentCount#, #managerCount#, #basePath#, getdate(), #reqSystem#, getdate())
			;
			
			/* tenantRest : authInsert */
			insert into tb_mng_auth (tenant_id, grant_id, grant_name, ins_id, ins_date, oam_grant, auth_rank, ex_grant)
			select #tenantId#, grant_id, grant_name, #reqSystem#, getdate(), oam_grant, auth_rank, ex_grant
			  from tb_mng_auth
			 where tenant_id = 'bridgetec'
			;
			
			/* tenantRest : menuAuthInsert */
			insert into tb_mng_menuauth (tenant_id, grant_id, depth1_id, depth2_id, depth3_id, auth_kind, ins_id, ins_date)
			select #tenantId#, grant_id, depth1_id, depth2_id, depth3_id, auth_kind, #reqSystem#, getdate()
			  from tb_mng_menuauth
			 where tenant_id = 'bridgetec'
			;
			
			/* tenantRest : groupInsert */
			insert into tb_mng_group (tenant_id, group_id, top_parent_id, parent_id, group_name, ins_id, ins_date)
			values (#tenantId#, '000000', '000000', 0, #tenantName#, #reqSystem#, getdate())
			;
		end;
	</insert>
	
	<update id="rest.tenantUpdate">
		/* ID : rest.tenantUpdate */
		update tb_mng_company
		   set tenant_name = #tenantName#
		     <isNotEmpty property="agentCount">, agent_count = #agentCount#</isNotEmpty>
		     <isNotEmpty property="managerCount">, manager_count = #managerCount#</isNotEmpty>
		     <isNotEmpty property="basePath">, base_path = #basePath#</isNotEmpty>
		     , upt_id = #reqSystem#
		     , upt_date = getdate()
		 where tenant_id = #tenantId#
	</update>
	
	<delete id="rest.tenantDelete">
		/* ID : rest.tenantDelete */
		update tb_mng_company
		   set expire_date = getdate()
			 , expire_reason = #expireReason#
			 , upt_id = #reqSystem#
			 , upt_date = getdate()
		 where tenant_id = #tenantId#
	</delete>
	
	<select id="rest.tenantExstYn" resultClass="egovMap">
		/* ID : rest.tenantExstYn */
		select case when count(*) > 0 then 'Y' else 'N' end as exst_yn
		  from tb_mng_company
		 where tenant_id = #tenantId#
	</select>
	
	<insert id="rest.groupInsert">
		/* ID : rest.groupInsert */
		insert into tb_mng_group (tenant_id, group_id, top_parent_id, parent_id, group_name, group_desc, ins_id, ins_date)
		values (#tenantId#, #groupId#, '000000', #parentId#, #groupName#, #groupDesc#, #reqSystem#, getdate())
	</insert>
	
	<update id="rest.groupUpdate">
		update tb_mng_group
		   set parent_id = #parentId#
		     , group_name = #groupName#
		     <isNotEmpty property="groupDesc">, group_desc = #groupDesc#</isNotEmpty>
		     , upt_id = #reqSystem#
		     , upt_date = getdate()
		 where tenant_id = #tenantId#
		   and group_id = #groupId#
	</update>
	
	<delete id="rest.groupDelete">
		delete from tb_mng_group where tenant_id = #tenantId# and group_id = #groupId#
	</delete>
	
	<select id="rest.groupExstYn" resultClass="egovMap">
		/* ID : rest.groupExstYn */
		select case when count(*) > 0 then 'Y' else 'N' end as exst_yn
		  from tb_mng_group
		 where tenant_id = #tenantId#
		   and group_id = #groupId#
	</select>
	
	<insert id="rest.userInsert">
		/* ID : rest.groupInsert */
		insert into tb_mng_userinfo (tenant_id, user_id, group_id, grant_id, user_name, user_pwd, salt, retiree_flag, login_date_check_use, convert_flag, player_kind, real_play_kind, ins_id, ins_date)
		values (#tenantId#, #userId#, #groupId#, #grantId#, #userName#, #userPwd#, #salt#, '1', '0', '1', '0', '1', #reqSystem#, getdate())
	</insert>
	
	<update id="rest.userUpdate">
		update tb_mng_userinfo
		   set group_id = #groupId#
		     <isNotEmpty property="grantId">, grant_id = #grantId#</isNotEmpty>
		     , user_name = #userName#
		     <isNotEmpty property="userPwd">, user_pwd = #userPwd#</isNotEmpty>
		     <isNotEmpty property="retireeFlag">, retiree_flag = #retireeFlag#</isNotEmpty>
		     , upt_id = #reqSystem#
		     , upt_date = getdate()
		 where tenant_id = #tenantId#
		   and user_id = #userId#
	</update>
	
	<delete id="rest.userDelete">
		update tb_mng_userinfo set retiree_flag = '0'
		 where tenant_id = #tenantId#
		   and user_id = #userId#
	</delete>
	
	<select id="rest.userExstYn" resultClass="egovMap">
		/* ID : rest.userExstYn */
		select case when count(*) > 0 then 'Y' else 'N' end as exst_yn
			 , case when max(convert(int, retiree_flag)) = '0' then 'Y' else 'N' end as retire_yn
		  from tb_mng_userinfo
		 where tenant_id = #tenantId#
		   and user_id = #userId#
	</select>
	
	<insert id="rest.dnInsert">
		/* ID : rest.dnInsert */
		<![CDATA[
		BEGIN
			DECLARE @v_cnt int
			DECLARE @v_system_id int
			DECLARE @v_process_id int
			
			SET @v_cnt = 0
			SET @v_system_id = 0
			SET @v_process_id = 0
		
			BEGIN
				SELECT @v_cnt = ISNULL(COUNT(*) OVER(), 0)
					 , @v_system_id = ISNULL(t2.SYSTEM_ID, 0)
					 , @v_process_id = ISNULL(t1.PROCESS_ID, 0)
				  FROM TB_MNG_DNPTRN t1
				  LEFT OUTER JOIN TB_SYS_PROCINFO t2
					ON t1.PROCESS_ID = t2.PROCESS_ID
				 WHERE t1.TENANT_ID = #tenantId#
				   AND t1.EXCP_PTRN_AT = '0'
				   AND CONVERT(int, #dnNo#) BETWEEN CONVERT(int, t1.START_DN_NO) AND CONVERT(int, t1.END_DN_NO)
			END

			IF @v_cnt = 0 BEGIN
				SELECT @v_cnt = ISNULL(COUNT(*) OVER(), 0)
					 , @v_system_id = ISNULL(t2.SYSTEM_ID, 0)
					 , @v_process_id = ISNULL(t1.PROCESS_ID, 0)
				  FROM TB_MNG_DNPTRN t1
				  LEFT OUTER JOIN TB_SYS_PROCINFO t2
					ON t1.PROCESS_ID = t2.PROCESS_ID
				 WHERE t1.TENANT_ID = #tenantId#
				   AND t1.EXCP_PTRN_AT = '0'
				   AND RIGHT('000' + parsename(#phoneIp#, 4), 3) + '.' +
					   RIGHT('000' + parsename(#phoneIp#, 3), 3) + '.' +
					   RIGHT('000' + parsename(#phoneIp#, 2), 3) + '.' +
					   RIGHT('000' + parsename(#phoneIp#, 1), 3)
					   BETWEEN RIGHT('000' + parsename(t1.START_IP, 4), 3) + '.' +
							   RIGHT('000' + parsename(t1.START_IP, 3), 3) + '.' +
							   RIGHT('000' + parsename(t1.START_IP, 2), 3) + '.' +
							   RIGHT('000' + parsename(t1.START_IP, 1), 3)
						   AND RIGHT('000' + parsename(t1.END_IP, 4), 3) + '.' +
							   RIGHT('000' + parsename(t1.END_IP, 3), 3) + '.' +
							   RIGHT('000' + parsename(t1.END_IP, 2), 3) + '.' +
							   RIGHT('000' + parsename(t1.END_IP, 1), 3)
			END

			IF @v_cnt = 0 BEGIN
				SELECT @v_cnt = ISNULL(COUNT(*) OVER(), 0)
					 , @v_system_id = ISNULL(t2.SYSTEM_ID, 0)
					 , @v_process_id = ISNULL(t1.PROCESS_ID, 0)
				  FROM TB_MNG_DNPTRN t1
				  LEFT OUTER JOIN TB_SYS_PROCINFO t2
					ON t1.PROCESS_ID = t2.PROCESS_ID
				 WHERE t1.TENANT_ID = #tenantId#
				   AND t1.EXCP_PTRN_AT = '1'
			END

			IF @v_cnt = 0 BEGIN
				insert into tb_mng_usertelno (
					tenant_id, dn_no, user_id, phone_ip, user_ip, dn_status, use_flag, ins_id, ins_date
				) values (
					#tenantId#, #dnNo#, #userId#, #phoneIp#, #userIp#, '00', '0', #reqSystem#, getdate()
				)
			END
			ELSE BEGIN
				insert into tb_mng_usertelno (
					tenant_id, dn_no, user_id, phone_ip, user_ip, dn_status, system_id, process_id, use_flag, ins_id, ins_date
				) values (
					#tenantId#, #dnNo#, #userId#, #phoneIp#, #userIp#, '00', @v_system_id, @v_process_id, '0', #reqSystem#, getdate()
				)
			END
		END
		]]>
	</insert>
	
	<update id="rest.dnUpdate">
		/* ID : rest.dnUpdate */
		<![CDATA[
		BEGIN
			DECLARE @v_cnt int
			DECLARE @v_system_id int
			DECLARE @v_process_id int
			
			SET @v_cnt = 0
			SET @v_system_id = 0
			SET @v_process_id = 0
			
			BEGIN
				SELECT @v_cnt = ISNULL(COUNT(*) OVER(), 0)
					 , @v_system_id = ISNULL(t2.SYSTEM_ID, 0)
					 , @v_process_id = ISNULL(t1.PROCESS_ID, 0)
				  FROM TB_MNG_DNPTRN t1
				  LEFT OUTER JOIN TB_SYS_PROCINFO t2
					ON t1.PROCESS_ID = t2.PROCESS_ID
				 WHERE t1.TENANT_ID = #tenantId#
				   AND t1.EXCP_PTRN_AT = '0'
				   AND CONVERT(int, #dnNo#) BETWEEN CONVERT(int, t1.START_DN_NO) AND CONVERT(int, t1.END_DN_NO)
			END

			IF @v_cnt = 0 BEGIN
				SELECT @v_cnt = ISNULL(COUNT(*) OVER(), 0)
					 , @v_system_id = ISNULL(t2.SYSTEM_ID, 0)
					 , @v_process_id = ISNULL(t1.PROCESS_ID, 0)
				  FROM TB_MNG_DNPTRN t1
				  LEFT OUTER JOIN TB_SYS_PROCINFO t2
					ON t1.PROCESS_ID = t2.PROCESS_ID
				 WHERE t1.TENANT_ID = #tenantId#
				   AND t1.EXCP_PTRN_AT = '0'
				   AND RIGHT('000' + parsename(#phoneIp#, 4), 3) + '.' +
					   RIGHT('000' + parsename(#phoneIp#, 3), 3) + '.' +
					   RIGHT('000' + parsename(#phoneIp#, 2), 3) + '.' +
					   RIGHT('000' + parsename(#phoneIp#, 1), 3)
					   BETWEEN RIGHT('000' + parsename(t1.START_IP, 4), 3) + '.' +
							   RIGHT('000' + parsename(t1.START_IP, 3), 3) + '.' +
							   RIGHT('000' + parsename(t1.START_IP, 2), 3) + '.' +
							   RIGHT('000' + parsename(t1.START_IP, 1), 3)
						   AND RIGHT('000' + parsename(t1.END_IP, 4), 3) + '.' +
							   RIGHT('000' + parsename(t1.END_IP, 3), 3) + '.' +
							   RIGHT('000' + parsename(t1.END_IP, 2), 3) + '.' +
							   RIGHT('000' + parsename(t1.END_IP, 1), 3)
			END

			IF @v_cnt = 0 BEGIN
				SELECT @v_cnt = ISNULL(COUNT(*) OVER(), 0)
					 , @v_system_id = ISNULL(t2.SYSTEM_ID, 0)
					 , @v_process_id = ISNULL(t1.PROCESS_ID, 0)
				  FROM TB_MNG_DNPTRN t1
				  LEFT OUTER JOIN TB_SYS_PROCINFO t2
					ON t1.PROCESS_ID = t2.PROCESS_ID
				 WHERE t1.TENANT_ID = #tenantId#
				   AND t1.EXCP_PTRN_AT = '1'
			END

			IF @v_cnt = 0 BEGIN
				update tb_mng_usertelno
				   set user_id = #userId#
					 , phone_ip = #phoneIp#
					 , user_ip = #userIp#
					 , dn_status = '00'
					 , use_flag = '0'
					 , upt_id = #reqSystem#
				     , upt_date = getdate()
				 where tenant_id = #tenantId#
				   and dn_no = #dnNo#
			END
			ELSE BEGIN
				update tb_mng_usertelno
				   set user_id = #userId#
					 , phone_ip = #phoneIp#
					 , user_ip = #userIp#
					 , dn_status = '00'
					 , system_id = @v_system_id
					 , process_id = @v_process_id
					 , use_flag = '0'
					 , upt_id = #reqSystem#
				     , upt_date = getdate()
				 where tenant_id = #tenantId#
				   and dn_no = #dnNo#
			END
		END
		]]>
	</update>
	
	<delete id="rest.dnDelete">
		/* ID : rest.dnDelete */
		delete from tb_mng_usertelno where tenant_id = #tenantId# and dn_no = #dnNo#
	</delete>
	
	<select id="rest.dnExstYn" resultClass="egovMap">
		/* ID : rest.dnExstYn */
		select case when count(*) > 0 then 'Y' else 'N' end as exst_yn
		  from tb_mng_usertelno
		 where tenant_id = #tenantId#
		   and dn_no = #dnNo#
	</select>
	
	<select id="rest.recInfoSelect" resultClass="egovMap">
		/* ID : rest.recInfoSelect */
		SELECT t1.TENANT_ID
			 , t1.DN_NO
			 , t1.GROUP_ID
			 , t4.GROUP_NAME
			 , t1.USER_ID AS AGENT_ID
			 , t3.USER_NAME AS AGENT_NAME
			 , t1.PHONE_IP
			 , t1.REC_TIME AS REC_STRT_TIME
			 , t1.END_TIME AS REC_TIME
			 , t1.REC_END_TIME
			 , t1.CALL_KIND
			 , t1.CALL_ID
			 , CASE WHEN LEN(t1.CALL_ID) - LEN(REPLACE(t1.CALL_ID,'_','')) > 1
					THEN SUBSTRING(t1.CALL_ID, CHARINDEX('_', t1.CALL_ID)+1, CHARINDEX('_', t1.CALL_ID, CHARINDEX('_', t1.CALL_ID)+1)-(CHARINDEX('_', t1.CALL_ID)+1))
					WHEN LEN(t1.CALL_ID) - LEN(REPLACE(t1.CALL_ID,'_','')) = 1
					THEN SUBSTRING(t1.CALL_ID, CHARINDEX('_', t1.CALL_ID) + 1, LEN(t1.CALL_ID) - CHARINDEX('_', t1.CALL_ID))
					ELSE t1.CALL_ID
			   END  AS UCID
			 , CASE WHEN LEN(t1.CALL_ID) - LEN(REPLACE(t1.CALL_ID,'_','')) > 2
			 		THEN SUBSTRING(RIGHT(t1.CALL_ID, CHARINDEX('_', REVERSE(t1.CALL_ID), CHARINDEX('_', REVERSE(t1.CALL_ID))+1)-1), 0, CHARINDEX('_', RIGHT(t1.CALL_ID, CHARINDEX('_', REVERSE(t1.CALL_ID), CHARINDEX('_', REVERSE(t1.CALL_ID))+1)-1)))
			 		ELSE ''
			   END AS HOP
			 , t1.CUST_NAME
             , t1.CUST_TEL
			 , t1.CUST_NO
			 , t1.MEDIA_VOICE
			 , t1.MEDIA_SCR
			 , t1.MEDIA_MOVIE
			 , t1.SEARCH_VISIBLE
			 , t1.CUST_ETC1
			 , t1.CUST_ETC2
			 , t1.CUST_ETC3
			 , t1.CUST_ETC4
			 , t1.CUST_ETC5
			 , t1.CUST_ETC6
			 , t1.CUST_ETC7
			 , t1.CUST_ETC8
			 , t1.HOLD
			 , t1.TRAN_TEL
			 , t2.MEDIA_KIND
			 , t2.FILE_NAME
			 , t2.UPLOAD_KIND
			 , t2.RXRTPCNT
			 , t2.TXRTPCNT
		  FROM (
		    SELECT tt1.*
			  FROM (
				SELECT a.*
				, FORMAT(DATEADD(SECOND, CONVERT(int, a.END_TIME), CONVERT(DATETIME, STUFF(STUFF(STUFF(a.REC_TIME, 9, 0, ' '), 12, 0, ':'), 15, 0, ':'))), 'yyyyMMddHHmmss') AS REC_END_TIME
				FROM TB_REC_FILE a
				WHERE a.TENANT_ID = #tenantId#
				AND a.REC_TIME <![CDATA[ >= ]]> #startDate# + '000000'
				AND a.REC_TIME <![CDATA[ <= ]]> CONVERT(CHAR(8), DATEADD(DAY, 1, CONVERT(DATE, #startDate#)), 112) + '235959'
		      ) tt1
		     WHERE tt1.REC_END_TIME <![CDATA[ >= ]]> #startDate# + #startTime#
		       AND tt1.REC_END_TIME <![CDATA[ <= ]]> #endDate# + #endTime#
		       <isNotEmpty property="agentId">
			   AND tt1.USER_ID = #agentId#
			   </isNotEmpty>
		       <isNotEmpty property="dnNo">
			   AND tt1.DN_NO = #dnNo#
			   </isNotEmpty>
		  ) t1
		  INNER JOIN (
			SELECT *
			  FROM TB_REC_FILE_INDEX
			 WHERE UPLOAD_KIND NOT IN ('0', '1', '2'<!-- , '9' -->)
		  ) t2
			ON t1.REC_KEY = t2.REC_KEY
		  LEFT OUTER JOIN TB_MNG_USERINFO t3
			ON t1.TENANT_ID = t3.TENANT_ID
		   AND t1.USER_ID = t3.USER_ID
          LEFT OUTER JOIN TB_MNG_GROUP t4
        	ON t1.TENANT_ID = t4.TENANT_ID
           AND t1.GROUP_ID = t4.GROUP_ID
		 ORDER BY t1.REC_TIME DESC
	</select>
	
</sqlMap>