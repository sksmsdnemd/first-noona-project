<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
 "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="recordFile">
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap" />
	
	<select id="recordFile.getNoSendRecFileIndexList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : recordFile.getNoSendRecFileIndexList */
		select 
				rec_key, tenant_id, rec_time, dn_no, user_id
				, RTRIM(CAST(media_voice AS CHAR(10))) as media_voice, RTRIM(CAST(media_scr AS CHAR(10))) as media_scr, media_kind
				, file_name, RTRIM(CAST(mrs_system_id AS CHAR(10))) as mrs_system_id, upload_kind, CONVERT(CHAR(23), upload_date, 21) as upload_date, store_drive
				, bk_label_id, bk_del_kind, CONVERT(CHAR(23), del_time, 21) as del_time, RTRIM(CAST(retry_count AS CHAR(10))) as retry_count
				, media_kind_name, upload_kind_name, rxrtpcnt, txrtpcnt, rxfilesize, txfilesize
			from
				(
				select 
						a.rec_key, a.tenant_id, a.rec_time, a.dn_no, a.user_id
					 	, isnull(a.media_voice,0) media_voice, isnull(a.media_scr,0) media_scr
					 	, c.media_kind, c.file_name, isnull(c.mrs_system_id,0) mrs_system_id
					 	, c.upload_kind, c.upload_date, c.store_drive, c.bk_label_id, c.bk_del_kind,c.del_time
					 	, isnull(c.retry_count,0) retry_count
					 	, (select code_name from tb_mng_basecode where class_id = 'media_kind' and code_id = c.media_kind) as media_kind_name
					 	, (select code_name from tb_mng_basecode where class_id = 'upload_class' and code_id = c.upload_kind) as upload_kind_name
					 	, c.rxrtpcnt, c.txrtpcnt, c.rxfilesize, c.txfilesize
					from tb_rec_file a  WITH(NOLOCK)
						join tb_rec_file_index c
					 		on a.rec_key = c.rec_key
				<dynamic prepend="WHERE">
					<isNotEmpty prepend="AND" property="tenantId">			a.tenant_id = #tenantId#				</isNotEmpty>
					<isNotEmpty prepend="AND" property="findUserId">		a.user_id like '%' + #findUserId# + '%'	</isNotEmpty>
					<isNotNull  property="userid">			
						<isNotEmpty prepend="AND" property="userid">		a.user_id Like '%' + #userid# + '%'		</isNotEmpty>									
					</isNotNull>
					<isNotEmpty prepend="AND" property="findRecKey">		a.rec_key = #findRecKey#				</isNotEmpty>
					<isNotEmpty prepend="AND" property="findSRecTime">		a.rec_time between convert(varchar,#findSRecTime#) and convert(varchar,#findERecTime#)	</isNotEmpty>
					<isNotEmpty prepend="AND" property="findMediaKind">		c.media_kind = #findMediaKind#			</isNotEmpty>
					<isNotEmpty prepend="AND" property="findUploadKind"> 	c.upload_kind = #findUploadKind#		</isNotEmpty>
					<!-- <isEmpty prepend="AND" property="findUploadKind">	<![CDATA[ c.upload_kind <= #findNotUploadKind#	]]>	</isEmpty> -->
				</dynamic>
				) tbl1
		order by file_name
	</select>
	
	<select id="recordFile.getNoSendRecCount" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : recordFile.getNoSendRecCount */
        SELECT
            	COUNT(*) as cnt
        	FROM (
            	SELECT 
            			COUNT(*) cnt
						, rec_time, user_id, user_name, media_kind
                 		, SUM(row_cnt0) AS row_cnt0, SUM(row_cnt1) AS row_cnt1, SUM(row_cnt2) AS row_cnt2
                 		, SUM(row_cnt3) AS row_cnt3, SUM(row_cnt4) AS row_cnt4, SUM(row_cnt5) AS row_cnt5
                 		, SUM(row_cnt9) AS row_cnt9
              		FROM (
                    	SELECT 
                    			SUBSTRING(a.rec_time, 1, 8) AS rec_time
	                         	, b.USER_ID, b.USER_NAME, d.MEDIA_KIND
	                         	, CASE WHEN e.UPLOAD_KIND = 0 THEN COUNT(1) ELSE 0 END AS row_cnt0
	                        	, CASE WHEN f.UPLOAD_KIND = 1 THEN COUNT(1) ELSE 0 END AS row_cnt1
	                         	, CASE WHEN g.UPLOAD_KIND = 2 THEN COUNT(1) ELSE 0 END AS row_cnt2
	                         	, CASE WHEN h.UPLOAD_KIND = 3 THEN COUNT(1) ELSE 0 END AS row_cnt3
	                         	, CASE WHEN i.UPLOAD_KIND = 4 THEN COUNT(1) ELSE 0 END AS row_cnt4
	                         	, CASE WHEN j.UPLOAD_KIND BETWEEN 5 AND 6 THEN COUNT(1) ELSE 0 END AS row_cnt5
	                         	, CASE WHEN k.UPLOAD_KIND = 9 THEN COUNT(1) ELSE 0 END AS row_cnt9
                      		FROM TB_REC_FILE a WITH(NOLOCK)
                      			JOIN TB_MNG_USERINFO b ON a.TENANT_ID = b.TENANT_ID AND a.USER_ID = b.USER_ID
                      			JOIN TB_MNG_GROUP c ON a.TENANT_ID = c.TENANT_ID AND a.GROUP_ID = c.GROUP_ID
                      			JOIN TB_REC_FILE_INDEX d ON a.REC_KEY = d.REC_KEY
                      			JOIN TB_REC_FILE_INDEX e ON a.REC_KEY = e.REC_KEY
                      			JOIN TB_REC_FILE_INDEX f ON a.REC_KEY = f.REC_KEY
                      			JOIN TB_REC_FILE_INDEX g ON a.REC_KEY = g.REC_KEY
                      			JOIN TB_REC_FILE_INDEX h ON a.REC_KEY = h.REC_KEY
                      			JOIN TB_REC_FILE_INDEX i ON a.REC_KEY = i.REC_KEY
                      			JOIN TB_REC_FILE_INDEX j ON a.REC_KEY = j.REC_KEY
                      			JOIN TB_REC_FILE_INDEX k ON a.REC_KEY = k.REC_KEY
					  	<dynamic prepend="WHERE">
							<isNotEmpty prepend="AND" property="tenantId"> 		a.tenant_id = #tenantId# 					</isNotEmpty>
        			   		<isNotEmpty prepend="AND" property="findUserId"> 	a.user_id 	LIKE '%'+#findUserId#+'%' 		</isNotEmpty>
                        	<isNotNull  property="userid">
                        		<isNotEmpty prepend="AND" property="userid"> 	a.user_id 	LIKE '%'+#userid#+'%' 			</isNotEmpty>
                        	</isNotNull>
							<isNotEmpty prepend="AND"  property="findText">
								<isEqual property="findKey" compareValue="a.user_id">	a.user_id  	</isEqual>
								<isEqual property="findKey" compareValue="b.user_name"> b.user_name </isEqual>
								<isEqual property="findKey" compareValue="a.dn_no">  	a.dn_no  	</isEqual>
								<isEqual property="findKey" compareValue="user_id">  	a.user_id  	</isEqual>
								<isEqual property="findKey" compareValue="user_name">  	b.user_name </isEqual>
								<isEqual property="findKey" compareValue="dn_no">  		a.dn_no  	</isEqual>
								Like '%'+ #findText# +'%'
							</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findDnNo"> 		a.dn_no 	LIKE #findDnNo# 				</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findCustName"> 	a.cust_name LIKE #findCustName# 			</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findCustNo"> 	a.cust_no 	LIKE #findCustNo# 				</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findCustTel"> 	a.cust_tel 	LIKE #findCustTel# 				</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findSRecTime"> 	a.REC_TIME BETWEEN convert(varchar,#findSRecTime#) AND convert(varchar,#findERecTime#) </isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findMediaKind"> d.media_kind = #findMediaKind# 				</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findGroupId"> 	c.depth 	LIKE #findGroupId#+'%' 			</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findTreeText"> 	c.group_id in
				 				<iterate property="findTreeText" open="(" conjunction="," close=")"> 	#findTreeText[]# 	</iterate>
				 			</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findUploadKind"> d.upload_kind = #findUploadKind# 			</isNotEmpty>
						</dynamic>
                     	GROUP BY SUBSTRING(a.rec_time, 1, 8)
							, b.USER_ID, b.USER_NAME, d.MEDIA_KIND
                         	, d.UPLOAD_KIND, e.UPLOAD_KIND, f.UPLOAD_KIND, g.UPLOAD_KIND
                         	, h.UPLOAD_KIND, i.UPLOAD_KIND, j.UPLOAD_KIND, k.UPLOAD_KIND
                   		) aa
             	GROUP BY rec_time, user_id, user_name, media_kind
           		) ff
	</select>

	<select id="recordFile.getNoSendRecList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : recordFile.getNoSendRecList */
		SELECT 
				rec_time, user_id, user_name, media_kind, row_cnt0, row_cnt1, row_cnt2, row_cnt3, row_cnt4, row_cnt5, row_cnt9
    	 		, (select code_name from tb_mng_basecode where class_id = 'media_kind' and code_id = media_kind) as media_kind_name
			FROM(
				SELECT * 
					FROM (
						SELECT
								ROW_NUMBER() OVER (ORDER BY rec_time, user_name DESC, media_kind DESC) RowNum2, TB_IN.*
							FROM (
                    			SELECT 
                    					Row_Number() over (order by rec_time desc, user_name, media_kind) RowNum1
                         				, rec_time, user_id, user_name, media_kind
                         				, SUM(row_cnt0) AS row_cnt0, SUM(row_cnt1) AS row_cnt1, SUM(row_cnt2) AS row_cnt2
                         				, SUM(row_cnt3) AS row_cnt3, SUM(row_cnt4) AS row_cnt4, SUM(row_cnt5) AS row_cnt5
                         				, SUM(row_cnt9) AS row_cnt9
                      				FROM (
                            			SELECT 	SUBSTRING(a.rec_time, 1, 8) AS rec_time
                                 				, b.USER_ID, b.USER_NAME, d.MEDIA_KIND
                                 				, CASE WHEN d.UPLOAD_KIND = 0 THEN COUNT(1) ELSE 0 END AS row_cnt0
                                 				, CASE WHEN d.UPLOAD_KIND = 1 THEN COUNT(1) ELSE 0 END AS row_cnt1
                                 				, CASE WHEN d.UPLOAD_KIND = 2 THEN COUNT(1) ELSE 0 END AS row_cnt2
                                 				, CASE WHEN d.UPLOAD_KIND = 3 THEN COUNT(1) ELSE 0 END AS row_cnt3
                                 				, CASE WHEN d.UPLOAD_KIND = 4 THEN COUNT(1) ELSE 0 END AS row_cnt4
                                 				, CASE WHEN d.UPLOAD_KIND BETWEEN 5 AND 6 THEN COUNT(1) ELSE 0 END AS row_cnt5
                                 				, CASE WHEN d.UPLOAD_KIND = 9 THEN COUNT(1) ELSE 0 END AS row_cnt9
                              				FROM TB_REC_FILE a WITH(NOLOCK)
                              					JOIN TB_MNG_USERINFO b ON a.TENANT_ID = b.TENANT_ID AND a.USER_ID = b.USER_ID
                              					JOIN TB_MNG_GROUP c ON a.TENANT_ID = c.TENANT_ID AND a.GROUP_ID = c.GROUP_ID
                              					JOIN TB_REC_FILE_INDEX d ON a.REC_KEY = d.REC_KEY
                             			<dynamic prepend="WHERE">
                             				<isNotEmpty prepend="AND" property="tenantId"> 		a.tenant_id = #tenantId# 				</isNotEmpty>
                                			<isNotEmpty prepend="AND" property="findUserId"> 	a.user_id like '%'+#findUserId#+'%' 	</isNotEmpty>
                                			<isNotNull  property="userid">
                                				<isNotEmpty prepend="AND" property="userid"> 	a.user_id like '%'+#userid#+'%' 		</isNotEmpty>
                                			</isNotNull>
											<isNotEmpty prepend="AND"  property="findText">
												<isEqual property="findKey" compareValue="a.user_id">  	a.user_id  	</isEqual>
												<isEqual property="findKey" compareValue="b.user_name"> b.user_name </isEqual>
												<isEqual property="findKey" compareValue="a.dn_no">  	a.dn_no  	</isEqual>
												<isEqual property="findKey" compareValue="user_id">  	a.user_id  	</isEqual>
												<isEqual property="findKey" compareValue="user_name">  	b.user_name </isEqual>
												<isEqual property="findKey" compareValue="dn_no">  		a.dn_no  	</isEqual>
												Like '%'+ #findText# +'%'
											</isNotEmpty>
                                			<isNotEmpty prepend="AND" property="findDnNo"> 		a.dn_no Like '%' + #findDnNo# + '%' 				</isNotEmpty>
                                			<isNotEmpty prepend="AND" property="findCustName"> 	a.cust_name Like '%' + #findCustName# + '%' 		</isNotEmpty>
                                			<isNotEmpty prepend="AND" property="findCustNo"> 	a.cust_no Like '%' + #findCustNo# + '%' 			</isNotEmpty>
                                			<isNotEmpty prepend="AND" property="findCustTel"> 	a.cust_tel Like '%' + #findCustTel# + '%' 			</isNotEmpty>
		                        			<isNotEmpty prepend="AND" property="findSRecTime"> 	a.REC_TIME BETWEEN convert(varchar,#findSRecTime#) AND convert(varchar,#findERecTime#) </isNotEmpty>
                                			<isNotEmpty prepend="AND" property="findSEndTime"> 	<![CDATA[ a.end_time >= CONVERT(#findSEndTime#) ]]> </isNotEmpty>
                                			<isNotEmpty prepend="AND" property="findEEndTime"> 	<![CDATA[ a.end_time <= CONVERT(#findEEndTime#) ]]> </isNotEmpty>
                                			<isNotEmpty prepend="AND" property="findMediaKind"> d.media_kind	= #findMediaKind# 					</isNotEmpty>
                                			<isNotEmpty prepend="AND" property="findGroupId"> 	c.depth Like '' + #findGroupId# + '%' 				</isNotEmpty>
                                			<isNotEmpty prepend="AND" property="findTreeText"> 	c.group_id in
						 						<iterate property="findTreeText" open="(" conjunction="," close=")"> 	#findTreeText[]# 			</iterate>						 			
						 					</isNotEmpty>
                                			<isNotEmpty prepend="AND" property="findUploadKind"> d.upload_kind = #findUploadKind# 					</isNotEmpty>
                               			</dynamic>
                             			GROUP BY SUBSTRING(a.rec_time, 1, 8)
                                 			, b.USER_ID, b.USER_NAME, d.MEDIA_KIND
                                 			, d.UPLOAD_KIND
                           				) aa
                     			GROUP BY rec_time, user_id, user_name, media_kind
                   				) TB_IN
						WHERE <![CDATA[ RowNum1 <= #iEPageNo# ]]>
						) TB_OUT
				WHERE <![CDATA[ RowNum2 <= #iSPageNo# ]]>
			) tbl2
		ORDER BY rec_time DESC, user_name , media_kind
	</select>
	
	<update id="recordFile.setRecFileMemoUpdate" parameterClass="java.util.HashMap">
		/* ID : recordFile.setRecFileMemoUpdate */
		update tb_rec_file 	set	
			cust_etc9 	 = #custEtc9#
			, cust_etc10 = #custEtc10#
		where rec_key 	 = #recKey#
	</update>
	
	<select id="recordFile.getRecFileList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : recordFile.getRecFileList */
		select * 
			from 
				(
				select distinct left(t1.rec_time,8) rec_time, t1.rec_time rec_time_term, t1.dn_no, t1.group_id, t1.user_id, t2.group_name
					from tb_rec_file t1
						join tb_mng_group t2 on t1.tenant_id = t2.tenant_id and t1.group_id = t2.group_id
				where 1=1
					and t1.tenant_id = convert(varchar,#tenantId#)
					and isnull(t1.user_id,'') = ''
					and t1.search_visible = '1'
					<isNotEmpty prepend="AND" property="findSRecTime"> 	t1.rec_time between convert(varchar,#findSRecTime#) and convert(varchar,#findERecTime#) </isNotEmpty>
					<isNotEmpty prepend="AND" property="findDnNo"> 		t1.dn_no Like '%' + #findDnNo# + '%'													</isNotEmpty>
				) a 
				left outer join (	
					select distinct min(t1.rec_time) min_rec_time, max(t1.rec_time) max_rec_time, t1.dn_no dn_no_bat, t1.user_id user_id_bat, t2.user_name user_name_bat
						from tb_rec_file t1
							join tb_mng_userinfo t2 on t1.tenant_id = t2.tenant_id and t1.user_id = t2.user_id
					where 1=1
					<![CDATA[
						and t1.tenant_id = convert(varchar,#tenantId#)
						and isnull(t1.user_id,'') <> '' 
						and t1.search_visible = '1'
						and t1.rec_time > convert(varchar,#findBefTime#)
						and t1.rec_time <= convert(varchar,#findSRecTime#)
					]]>
					group by t1.dn_no, t1.user_id, t2.user_name
					) b on a.dn_no = b.dn_no_bat
		order by dn_no, rec_time_term
	</select>
	
	<select id="recordFile.getRecFileCallList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : recordFile.getRecFileCallList */
		select t1.rec_key, t1.tenant_id, t1.rec_time, t1.dn_no, t1.group_id, t2.group_name, t1.call_id, t1.call_kind
			from tb_rec_file t1 
				join tb_mng_group t2 on t1.tenant_id = t2.tenant_id and t1.group_id = t2.group_id
		where 1=1 
			and t1.tenant_id = convert(varchar,#tenantId#)
			and isnull(t1.user_id,'') = ''
			and t1.search_visible = '1'
			and t1.rec_time between convert(varchar,#startDate#) and convert(varchar,#endDate#)
			and t1.dn_no = #dnNo#
		order by rec_time
	</select>
	
	<update id="recordFile.setRecFileUserIdUpdate" parameterClass="java.util.HashMap">
		/* ID : recordFile.setRecFileUserIdUpdate */
		update tb_rec_file set	
			user_id = #userId#
		where 1=1
			and tenant_id = #tenantId#
			and isnull(user_id,'') = ''
			and search_visible = '1'
			and rec_time between convert(varchar,#findSRecTime#) and convert(varchar,#findERecTime#)
			and dn_no = #dnNo#
	</update>
	
	<update id="recordFile.setRecFileCallUserIdUpdate" parameterClass="java.util.HashMap">
		/* ID : recordFile.setRecFileCallUserIdUpdate */
		update tb_rec_file 	set	
			user_id = #userId#
		where 1=1
			and isnull(user_id,'') = ''
			and search_visible = '1'
			and rec_key = #recKey#
	</update>
	
	<select id="recordFile.getMaxMarkingId" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : recordFile.getMaxMarkingId */
		select isnull(max(marking_id),0) + 1 marking_id
			FROM tb_rec_markcode
		where tenant_id = #tenantId#
	</select>
	
	<select id="recordFile.getMarkCodeList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : recordFile.getMarkCodeList */
		select 
				tenant_id, marking_id, marking_class, marking_color, marking_desc
			from tb_rec_markcode
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="findTenantId">
				tenant_id  = #findTenantId#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="findText">
				marking_class Like '%'+ #findText# +'%'
			</isNotEmpty>
		</dynamic>
		order by tenant_id, marking_id
	</select>
	
	<insert id="recordFile.setMarkCodeInsert" parameterClass="java.util.HashMap">
		/* ID : recordFile.setMarkCodeInsert */
		insert into tb_rec_markcode
			(
			tenant_id, marking_id, marking_class, marking_color, marking_desc
			) 
		values 
			(
			#tenantId#, #markingId#, #markingClass#, #markingColor#, #markingDesc#
			)
	</insert>
	
	<update id="recordFile.setMarkCodeUpdate" parameterClass="java.util.HashMap">
		/* ID : recordFile.setMarkCodeUpdate */
		update tb_rec_markcode set 
			marking_class  = #markingClass#
			,marking_color = #markingColor#
			,marking_desc  = #markingDesc#
		where tenant_id    = #tenantId#
			and marking_id = #markingId#
	</update>
	
	<delete id="recordFile.setMarkCodeDelete" parameterClass="java.util.HashMap" >
		/* ID : recordFile.setMarkCodeDelete */
		delete 
			from tb_rec_markcode
		where tenant_id    = #tenantId#
			and marking_id = #markingId#
	</delete>
	
	<select id="recordFile.getRecGrant" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : recordFile.getRecGrant*/
		SELECT * FROM TB_REC_GRANT
		 WHERE USER_ID = #userId#
		   AND REC_KEY = #recKey#
		/*만료일 비교 조건추가*/
	</select>
	
	<update id="recordFile.updateRecFile" parameterClass="java.util.HashMap">
		/* ID : recordFile.updateRecFile */
		UPDATE TB_REC_FILE
		   SET CALL_ID     = #callId#
			 , CUST_NAME   = #custName#
			 , CUST_TEL    = #custTel#
			 , CUST_NO     = #custNo#
			 , CUST_ETC1   = #etc_1#
			 , CUST_ETC2   = #etc_2#
			 , CUST_ETC3   = #etc_3#
			 , CUST_ETC4   = #etc_4#
			 , CUST_ETC5   = #etc_5#
			 , CUST_ETC6   = #etc_6#
			 , CUST_ETC7   = #etc_7#
			 , CUST_ETC8   = #etc_8#
			 , CUST_ETC9   = #etc_9#
			 , CUST_ETC10  = #etc_10#
		 WHERE REC_KEY     = #recKey#
			OR CALL_ID     = #callId#
	</update>

	<select id="recordFile.getRecSendDetailListCnt" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : recordFile.getRecSendDetailListCnt */
		SELECT F.CNT FROM (SELECT  COUNT(*) AS CNT
		FROM TB_REC_FILE A
		INNER JOIN TB_REC_FILE_INDEX B
		ON A.REC_KEY= B.REC_KEY
		WHERE
		<isEqual property="findTS" compareValue="1">
			<!-- 1 -->
			<![CDATA[	A.REC_TIME >=	#txtDate1_From# + #findSRegTime# ]]>
			AND <![CDATA[	A.REC_TIME <=	#txtDate1_To# + #findERegTime# ]]>
		</isEqual>
		<isNotEqual property="findTS" compareValue="1">
			<!-- 2 -->
			<![CDATA[	SUBSTRING(A.REC_TIME, 1, 8) >=	#txtDate1_From# ]]>
			AND <![CDATA[	SUBSTRING(A.REC_TIME, 1, 8) <=	#txtDate1_To# ]]>
			AND <![CDATA[	SUBSTRING(A.REC_TIME, 9, 6) >=	#findSRegTime# ]]>
			AND <![CDATA[	SUBSTRING(A.REC_TIME, 9, 6) <=	#findERegTime# ]]>
		</isNotEqual>
		AND A.TENANT_ID = #findTenantId#

		<isNotEmpty prepend="AND" property="findSearchVisible">
			A.SEARCH_VISIBLE = #findSearchVisible#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="findDnNo">
			A.DN_NO Like '%' + #findDnNo# + '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="findUploadKind">
			B.UPLOAD_KIND = #findUploadKind#
		</isNotEmpty>
		) F

	</select>


	<select id="recordFile.getRecSendDetailList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : recordFile.getRecSendDetailList */
		SELECT  REC_TIME
		, UPLOAD_KIND
		, UPLOAD_KIND_STR
		, TENANT_ID
		, DN_NO
		, REC_KEY
		, USER_ID
		, USER_NAME
		, CALL_ID
		, END_TIME
		, CUST_TEL
		, SEARCH_VISIBLE
		, CALL_TIME
		, RXRTPCNT
		, RXFILESIZE
		, TXRTPCNT
		, TXFILESIZE
		FROM(
		SELECT * FROM (
		SELECT
		ROW_NUMBER() OVER (ORDER BY REC_TIME) RowNum2, TB_IN.*
		FROM (
		SELECT Row_Number() over (order by A.REC_TIME DESC) RowNum1
		, convert(varchar, CONVERT(CHAR(23), A.REC_TIME, 21) ) AS REC_TIME
		, B.UPLOAD_KIND
		, D.CODE_NAME AS UPLOAD_KIND_STR
		, A.TENANT_ID
		, A.DN_NO
		, A.REC_KEY
		, A.USER_ID
		, C.USER_NAME
		, A.CALL_ID
		, A.END_TIME
		, A.CUST_TEL
		, A.SEARCH_VISIBLE
		, B.CALL_TIME
		, B.RXRTPCNT
		, B.RXFILESIZE
		, B.TXRTPCNT
		, B.TXFILESIZE
		FROM TB_REC_FILE A
		INNER JOIN TB_REC_FILE_INDEX B
		ON A.REC_KEY= B.REC_KEY
		LEFT OUTER JOIN TB_MNG_USERINFO C
		ON A.USER_ID = C.USER_ID
		AND A.TENANT_ID = C.TENANT_ID
		LEFT OUTER JOIN TB_MNG_BASECODE D
		ON D.CLASS_ID = 'upload_class'
		AND D.CODE_ID = B.UPLOAD_KIND
		WHERE
		<isEqual property="findTS" compareValue="1">
			<!-- 1 -->
			<![CDATA[	A.REC_TIME >=	#txtDate1_From# + #findSRegTime# ]]>
			AND <![CDATA[	A.REC_TIME <=	#txtDate1_To# + #findERegTime# ]]>
		</isEqual>
		<isNotEqual property="findTS" compareValue="1">
			<!-- 2 -->
			<![CDATA[	SUBSTRING(A.REC_TIME, 1, 8) >=	#txtDate1_From# ]]>
			AND <![CDATA[	SUBSTRING(A.REC_TIME, 1, 8) <=	#txtDate1_To# ]]>
			AND <![CDATA[	SUBSTRING(A.REC_TIME, 9, 6) >=	#findSRegTime# ]]>
			AND <![CDATA[	SUBSTRING(A.REC_TIME, 9, 6) <=	#findERegTime# ]]>
		</isNotEqual>
		AND A.TENANT_ID = #findTenantId#
		<isNotEmpty prepend="AND" property="findSearchVisible">
			A.SEARCH_VISIBLE = #findSearchVisible#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="findUploadKind">
			B.UPLOAD_KIND = #findUploadKind#
		</isNotEmpty>
		<isNotEmpty prepend="AND"  property="findText">
			<isEqual property="findSearch" compareValue="dn_no">		A.DN_NO		like '%' + #findText# + '%'	</isEqual>
			<isEqual property="findSearch" compareValue="user_id">		A.USER_ID 	like '%' + #findText# + '%'	</isEqual>
			<isEqual property="findSearch" compareValue="user_name">	C.USER_NAME like '%' + #findText# + '%'	</isEqual>
		</isNotEmpty>


		) TB_IN
		WHERE <![CDATA[ RowNum1 <= #iEPageNo# ]]>
		) TB_OUT
		WHERE <![CDATA[ RowNum2 <= #iSPageNo# ]]>
		) tbl2
		ORDER BY rec_time DESC
	</select>
	
	<select id="recordFile.getRecSendDetailStat"  parameterClass="java.util.HashMap" resultClass="egovMap">
		select b.upload_kind
			 , count(b.upload_kind) as cnt
			 , c.code_name upload_kind_str
		  from tb_rec_file a
		 inner join tb_rec_file_index b
			on a.rec_key = b.rec_key
		  left outer join tb_mng_basecode c
			on b.upload_kind = c.code_id
		   and c.class_id=  'upload_class'
		 where a.rec_time between #txtDate1_From# + '00' and #txtDate1_To# + '99'
		   AND A.TENANT_ID = #findTenantId#
		<isNotEmpty prepend="AND"  property="findText">	
			<isEqual property="findSearch" compareValue="dn_no">		A.DN_NO		like '%' + #findText# + '%'	</isEqual>
			<isEqual property="findSearch" compareValue="user_id">		A.USER_ID 	like '%' + #findText# + '%'	</isEqual>
			<isEqual property="findSearch" compareValue="user_name">	C.USER_NAME like '%' + #findText# + '%'	</isEqual>
		</isNotEmpty>
		 group by b.upload_kind, c.code_name
 	</select>

	<select id="recordFile.getAPIConstList" parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT A.REC_TIME
		  , A.USER_ID
		  , A.DN_NO
		  , A.GROUP_ID
		  , C.GROUP_NAME
		  , A.CALL_ID AS DB_CALL_ID
		  , B.CALL_ID AS API_CALL_ID
		  , B.CALL_TYPE
		  , A.CUST_NAME
		  , A.CUST_TEL
		  , A.CALL_KIND
		FROM TB_REC_FILE A
		LEFT OUTER JOIN TB_API_CONST B
		ON A.CALL_ID = B.CALL_ID
		LEFT OUTER JOIN TB_MNG_GROUP C
		ON A.GROUP_ID = C.GROUP_ID
		AND C.TENANT_ID = #findTenantId#
		WHERE (A.REC_TIME BETWEEN #sRecTime# AND #eRecTime#)
		AND A.tenant_id = #findTenantId#
		ORDER BY A.REC_TIME DESC

	</select>
	<select id="recordFile.getAPIConstListCnt" parameterClass="java.util.HashMap" resultClass="egovMap">
		select count(*) as cnt from (
		SELECT A.REC_TIME
		  , A.USER_ID
		  , A.DN_NO
		  , A.GROUP_ID
		  , C.GROUP_NAME
		  , A.CALL_ID
		  , B.CALL_ID
		  , B.CALL_TYPE
		  , A.CUST_NAME
		  , A.CUST_TEL
		  , A.CALL_KIND
		FROM TB_REC_FILE A
		LEFT OUTER JOIN TB_API_CONST B
		ON A.CALL_ID = B.CALL_ID
		LEFT OUTER JOIN TB_MNG_GROUP C
		ON A.GROUP_ID = C.GROUP_ID
		AND C.TENANT_ID = #findTenantId#
		WHERE (A.REC_TIME BETWEEN #sRecTime# AND #eRecTime#)
		AND A.tenant_id = #findTenantId#
		ORDER BY A.REC_TIME DESC)

	</select>
</sqlMap>