<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="Group"> 
    <typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap" />
   
    <!-- <select id="Group.getParentID" parameterClass="java.util.HashMap" resultClass="egovMap">
    	/* ID : Group.getParentID */
		select parent_id FROM tb_mng_group
		where tenant_id = #tenantId#
			and group_id=#groupId#
	</select> -->
	
	<select id="Group.getMaxGroupId" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : Group.getMaxGroupId */
		select isnull(max(group_id),0) + 1 group_id
			FROM tb_mng_group
		where tenant_id = #tenantId#
	</select>
	
	<!-- <select id="Group.getSubDepth" parameterClass="java.util.HashMap" resultClass="egovMap">
	select char(ascii(depth2)+1) as depth 
			from (
				select top 1  right(depth,1) as depth2
					from tb_mng_group
					where tenant_id = #tenantId#
						and top_parent_id = #topParentId# 
						and depth like #depth# +'%' 
						and len(depth) = len(''+#depth#+'')+1
					order by depth desc)tb
	</select> -->
   <!--
	<select id="Group.getGroupList" parameterClass="java.util.HashMap" resultClass="egovMap" >
   		/* ID : Group.getGroupList */
		select 
				a.tenant_id, CAST(a.group_id AS CHAR(10)) as group_id, isnull(a.top_parent_id,0) top_parent_id, a.parent_id
				, a.depth, left('               ', len(depth)*2-2) head , len(depth) depth_len, a.group_name, a.value_title_id
				, a.group_mng_id, a.ins_id, CONVERT(CHAR(23), a.ins_date, 21) as ins_date, a.upt_id,
				CONVERT(CHAR(23), a.upt_date, 21)  as upt_date, a.group_desc
			FROM tb_mng_group a
		where a.tenant_id  = #findTenantId#
			<isNotEmpty property="findGroupId"> 	and group_id 	Like '%'+ #findGroupId# +'%'	</isNotEmpty>
			<isNotEmpty property="findGroupName"> 	and group_name 	Like '%'+ #findGroupName# +'%'	</isNotEmpty>
		order by a.top_parent_id asc, a.depth asc
	</select>
	-->
	<select id="Group.getGroupList" parameterClass="java.util.HashMap" resultClass="egovMap">
		WITH TREE_QUERY(
		GROUP_ID
		, PARENT_ID
		, GROUP_NAME
		, TOP_PARENT_ID
		, DEPTH
		, VALUE_TITLE_ID
		, GROUP_MNG_ID
		, INS_ID
		, INS_DATE
		, UPT_ID
		, UPT_DATE
		, GROUP_DESC
		, SORT
		, DEPTH_FULLNAME
		, GROUP_LEVEL) AS
		( SELECT
		GROUP_ID
		, PARENT_ID
		, GROUP_NAME
		, TOP_PARENT_ID
		, DEPTH
		, VALUE_TITLE_ID
		, GROUP_MNG_ID
		, INS_ID
		, INS_DATE
		, UPT_ID
		, UPT_DATE
		, GROUP_DESC
		, CONVERT(VARCHAR, GROUP_ID + REPLICATE(0,10-LEN(GROUP_ID))) AS SORT
		, CONVERT(VARCHAR, GROUP_NAME) AS DEPTH_FULLNAME
		, 1 AS GROUP_LEVEL
		FROM TB_MNG_GROUP
		WHERE PARENT_ID = '0'
		AND TENANT_ID   = #findTenantId#
		UNION ALL
		SELECT
		B.GROUP_ID
		, B.PARENT_ID
		, B.GROUP_NAME
		, B.TOP_PARENT_ID
		, B.DEPTH
		, B.VALUE_TITLE_ID
		, B.GROUP_MNG_ID
		, B.INS_ID
		, B.INS_DATE
		, B.UPT_ID
		, B.UPT_DATE
		, B.GROUP_DESC
		, CONVERT(VARCHAR,C.SORT + '_' + CONVERT(VARCHAR, B.GROUP_ID + REPLICATE(0,10-LEN(B.GROUP_ID)))  ) AS SORT
		, CONVERT(VARCHAR,C.DEPTH_FULLNAME + ' _ ' + B.GROUP_NAME)   AS DEPTH_FULLNAME
		, C.GROUP_LEVEL + 1 AS GROUP_LEVEL
		FROM TB_MNG_GROUP B,
		TREE_QUERY C
		WHERE B.PARENT_ID = C.GROUP_ID
		AND B.TENANT_ID   = #findTenantId#  )
		SELECT AA.GROUP_ID
		, AA.PARENT_ID
		, AA.GROUP_NAME
		, AA.TOP_PARENT_ID
		, AA.DEPTH
		, AA.VALUE_TITLE_ID
		, AA.GROUP_MNG_ID
		, AA.INS_ID
		, AA.SORT
		, CONVERT(VARCHAR,CONVERT(CHAR,AA.INS_DATE, 21)) AS INS_DATE
		, AA.UPT_ID
		,  CONVERT(VARCHAR,CONVERT(CHAR,AA.UPT_DATE, 21)) AS UPT_DATE
		, AA.GROUP_DESC
		, BB.GROUP_NAME AS PARENT_NAME
		, AA.DEPTH_FULLNAME
		, AA.GROUP_LEVEL
		, (SELECT COUNT(GROUP_ID) FROM TB_MNG_GROUP WHERE PARENT_ID = AA.GROUP_ID AND TENANT_ID = #findTenantId# ) AS CHILD_CNT
		FROM TREE_QUERY AA
		LEFT OUTER JOIN TB_MNG_GROUP BB
		ON AA.PARENT_ID = BB.GROUP_ID
		AND BB.TENANT_ID = #findTenantId#
		WHERE 1=1
		<isNotEmpty property="findGroupId">   and AA.SORT Like '%' + #findGroupId# + '%'		</isNotEmpty>
		<isNotEmpty property="findGroupName"> and AA.DEPTH_FULLNAME Like '%' + #findGroupName# + '%'	</isNotEmpty>
		ORDER BY  SORT
	</select>
	<!-- <select id="Group.getGroupList2" parameterClass="java.util.HashMap" resultClass="egovMap" >
		select tenant_id as code , tenant_name as code_nm , exception_find
		from tb_mng_company
		where com_status = 0
		order by tenant_name
	</select> -->
	<!--
	<insert id="Group.setGroupInsert_ORG" parameterClass="java.util.HashMap">
		/* ID : Group.setGroupInsert */
		insert into	tb_mng_group
			(
			tenant_id, group_id, top_parent_id, parent_id, depth, group_name, value_title_id, group_mng_id, group_desc, ins_id, ins_date
			)
		select  
				#tenantId#, #groupId#, #topParentId#, #parentId#, #depth#+isnull(char(ascii(max(substring(depth, len(#depth#)+1, 10))) + 1),'A')
				, #groupName#, #valueTitleId#, #groupMngId#, #groupDesc#, #insId#, getdate()
			from tb_mng_group
		where tenant_id = #tenantId# and depth like #depth# + '%'
	</insert>
-->
	<insert id="Group.setGroupInsert" parameterClass="java.util.HashMap">
		/* ID : Group.setGroupInsert */
		insert into tb_mng_group (
			tenant_id, group_id, top_parent_id, parent_id, depth, group_name, value_title_id, group_mng_id, group_desc, ins_id, ins_date
		 )VALUES(
				#tenantId#, #groupId#, #topParentId#, #parentId#
				, ''
				, #groupName#, #valueTitleId#, #groupMngId#, #groupDesc#, #insId#, GETDATE()
				)

	</insert>
   	<update id="Group.setGroupChangeUpdate" parameterClass="java.util.HashMap">
		/* ID : Group.setGroupChangeUpdate */   	
		update tb_mng_group set 
			depth 		= #destDepth#
			, upt_id	= #adminId#
			, upt_date	= getdate()
		where tenant_id = #tenantId#
			and group_id = #srcGroupId#
	</update>
	
	<update id="Group.setGroupChangeUpdate2" parameterClass="java.util.HashMap">
		/* ID : Group.setGroupChangeUpdate2 */
		update tb_mng_group set 
			depth 		 = #srcDepth#
			, upt_id	 = #adminId#
			, upt_date	 = getdate()
		where tenant_id  = #tenantId#
			and group_id = #destGroupId#
	</update>
   
   	<update id="Group.setGroupUpdate" parameterClass="java.util.HashMap">
		/* ID : Group.setGroupUpdate */
		begin
		   	
			update tb_mng_group
			   set group_id			= #groupId#
			     , group_name		= #groupName#
				 , value_title_id	= #valueTitleId#
				 , group_mng_id		= #groupMngId#
				 , group_desc 		= #groupDesc#
				 , upt_id			= #uptId#
				 , upt_date			= getdate()
			 where tenant_id 		= #tenantId#
				and group_id 		= #orgGroupId#
			;
			
			update tb_mng_group
			   set parent_id = #groupId#
			 where parent_id = #orgGroupId#
			;
			
		end;
	</update>
	
	<delete id="Group.setGroupDelete" parameterClass="java.util.HashMap" >
		/* ID : Group.setGroupDelete */   	
		delete 
			from tb_mng_group
		where tenant_id  = #tenantId#
			and group_id = #groupId#
	</delete>

	<select id="Group.getGroupIdCnt" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : Group.getGroupIdCnt */
		SELECT COUNT(GROUP_ID) AS CNT FROM TB_MNG_GROUP
		WHERE TENANT_ID = #tenantId#
		AND UPPER(GROUP_ID) = UPPER(#findGroupId#)
	</select>


	<update id="Group.setParentIdUpdate" parameterClass="java.util.HashMap">
		UPDATE TB_MNG_GROUP SET
		PARENT_ID = #parentId#
		WHERE GROUP_ID = #groupId#
		AND TENANT_ID = #tenantId#
	</update>

	<delete id="Group.deleteGroupList" parameterClass="java.util.HashMap">
		  DELETE FROM TB_MNG_GROUP
		  WHERE GROUP_ID = #findGroupId#
			AND TENANT_ID = #findTenantId#
	</delete>

</sqlMap>
