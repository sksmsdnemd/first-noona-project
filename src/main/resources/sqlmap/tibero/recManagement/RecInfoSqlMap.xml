<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
 "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="recInfo">
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap" />
	
	<select id="recInfo.getRecLogCount" parameterClass="java.util.HashMap"	resultClass="egovMap">
	    <!-- (2023.08.22) 청취로그기본조회 TB_REC_FILE 테이블 쪼개기 작업 (HAGUANGHO) -->
		/* ID : recInfo.getRecLogCount */ 
		select count(*) cnt
		FROM tb_rec_reclog tb_reclog
			left outer join (
				select user_id, user_name worker_name , tenant_id
				from tb_mng_userinfo 
				where tenant_id = #tenantId#
					<isNotEmpty property="findWorkerId"> and user_id   like '%' || #findWorkerId# || '%' </isNotEmpty>
					<isNotEmpty property="findWorkerNm"> and user_name like '%' || #findWorkerNm# || '%' </isNotEmpty>
				) tb_user_work 
				on tb_user_work.user_id = tb_reclog.worker_id and tb_user_work.tenant_id = #tenantId#
			left outer join  (
				select user_id, user_name , tenant_id
				from tb_mng_userinfo 
				where 1=1
					<isNotEmpty property="findUserId">	and user_id   like '%' || #findUserId# || '%' </isNotEmpty>
					<isNotEmpty property="findUserNm">	and user_name like '%' || #findUserNm# || '%' </isNotEmpty>
				) tb_user on tb_reclog.user_id = tb_user.user_id and tb_user.tenant_id = tb_reclog.tenant_id
			left outer join tb_mng_basecode bc
				on bc.class_id = 'rec_reason' and bc.code_id = tb_reclog.rec_reason
		where tb_reclog.tenant_id =  #tenantId#
			and	<![CDATA[	to_char(work_sdate, 'YYYY-MM-DD HH24:MI:SS') >= to_char(to_date(#txtDate1_From#,'YYYY-MM-DD'),'YYYY-MM-DD') || ' '
				 			|| to_char(to_date(#recFrmTm#,'HH24:MI:SS'),'HH24:MI:SS') ]]> 
			and <![CDATA[	to_char(work_sdate, 'YYYY-MM-DD HH24:MI:SS') <=	to_char(to_date(#txtDate1_To#,'YYYY-MM-DD'),'YYYY-MM-DD') || ' '
				 			|| to_char(to_date(#recEndTm#,'HH24:MI:SS'),'HH24:MI:SS') ]]> 			
			<isNotEmpty property="findRealtimeFlag"> and TRIM(realtime_flag) = #findRealtimeFlag# </isNotEmpty>
	</select>
	
	<select id="recInfo.getRecLogList" parameterClass="java.util.HashMap" resultClass="egovMap">
        <!-- (2023.08.22) 청취로그기본조회 TB_REC_FILE 테이블 쪼개기 작업 (HAGUANGHO) -->
		/* ID : recInfo.getRecLogList */
		select * 
		from (
			select
				  Row_Number() over (order by work_sdate) RowNum2
				, TB_IN.*
			from (
				select
					  Row_Number() over (order by work_sdate desc) RowNum1
					, tb_reclog.tenant_id
					, to_char(work_sdate, 'YYYY-MM-DD HH24:MI:SS') as work_sdate
					, realtime_flag
					, worker_id
					, worker_name
					, tb_reclog.rec_key
					, tb_reclog.rec_time
					, tb_reclog.user_id, user_name
					, tb_reclog.dn_no
					, tb_reclog.worker_ip
					, bc.code_name as rec_reason
					, tb_reclog.rec_reason_text
				FROM tb_rec_reclog tb_reclog
					left outer join (
						select user_id, user_name worker_name , tenant_id
						from tb_mng_userinfo
						where tenant_id = #tenantId#
							<isNotEmpty property="findWorkerId"> and user_id   like '%' || #findWorkerId# || '%' </isNotEmpty>
							<isNotEmpty property="findWorkerNm"> and user_name like '%' || #findWorkerNm# || '%' </isNotEmpty>
						) tb_user_work
						on tb_user_work.user_id = tb_reclog.worker_id and tb_user_work.tenant_id = #tenantId#
					left outer join  (
						select user_id, user_name , tenant_id
						from tb_mng_userinfo
						where 1=1
							<isNotEmpty property="findUserId">	and user_id   like '%' || #findUserId# || '%' </isNotEmpty>
							<isNotEmpty property="findUserNm">	and user_name like '%' || #findUserNm# || '%' </isNotEmpty>
						) tb_user on tb_reclog.user_id = tb_user.user_id and tb_user.tenant_id = tb_reclog.tenant_id
					left outer join tb_mng_basecode bc on bc.class_id = 'rec_reason' and bc.code_id = tb_reclog.rec_reason
				where tb_reclog.tenant_id =  #tenantId#
					and	<![CDATA[	to_char(work_sdate, 'YYYY-MM-DD HH24:MI:SS') >= to_char(to_date(#txtDate1_From#,'YYYY-MM-DD'),'YYYY-MM-DD') || ' '
									|| to_char(to_date(#recFrmTm#,'HH24:MI:SS'),'HH24:MI:SS') ]]>
					and <![CDATA[	to_char(work_sdate, 'YYYY-MM-DD HH24:MI:SS') <=	to_char(to_date(#txtDate1_To#,'YYYY-MM-DD'),'YYYY-MM-DD') || ' '
									|| to_char(to_date(#recEndTm#,'HH24:MI:SS'),'HH24:MI:SS') ]]>
					<isNotEmpty property="findRealtimeFlag"> and TRIM(realtime_flag) = #findRealtimeFlag# </isNotEmpty>
			) TB_IN
			WHERE  <![CDATA[ RowNum1 <= #iEPageNo# ]]>
		) TB_OUT
		WHERE <![CDATA[ RowNum2 <= #iSPageNo# ]]>	
		order by work_sdate desc 
	</select>
	
	<insert id="recInfo.setRecLogInsert" parameterClass="java.util.HashMap">
		/* ID : recInfo.setRecLogInsert */
		insert into tb_rec_reclog	
			(
			tenant_id, worker_id, listening_key, work_sdate, worker_ip, user_id, dn_no, user_ip, realtime_flag, rec_key , rec_reason , rec_reason_text , rec_time 
			)
		values 
			(
			#tenantId#, #workerId#, #listeningKey#, sysdate, #workerIp#, #userId#, #dnNo#, #userIp#, #realtimeFlag#, #recKey# , #recReason# , #recReasonText# , #recTime#
			)
	</insert>
	
	<insert id="recInfo.setRecLogRealInsert" parameterClass="java.util.HashMap">
		/* ID : recInfo.setRecLogRealInsert */
		insert into tb_rec_reclog	
			(tenant_id, worker_id, listening_key, work_sdate, worker_ip, user_id, dn_no, user_ip, realtime_flag, rec_key , rec_reason , rec_reason_text , rec_time )
		select  
			#tenantId#, #workerId#, #listeningKey#, sysdate, #workerIp#, user_id , #dnNo#, phone_ip , #realtimeFlag#, RT_REC_KEY , #recReason# , #recReasonText# , #recTime# 
		from tb_mng_usertelno
		where tenant_id = #tenantId# and dn_no = #dnNo#
		and dn_status = 10
	</insert>
	
	<insert id="recInfo.setAppRecLogRealInsert" parameterClass="java.util.HashMap">
        <!-- (2023.08.22) TB_REC_FILE 테이블 쪼개기 작업 (HAGUANGHO) -->
		/* ID : recInfo.setAppRecLogRealInsert */
		insert into tb_rec_reclog	
			(tenant_id, worker_id, listening_key, work_sdate, worker_ip, user_id, dn_no, user_ip, realtime_flag, rec_key , rec_reason , rec_reason_text , rec_time )
		select  
			#tenantId# , #workerId#, #listeningKey#, sysdate, #loginIp# , user_id , dn_no , phone_ip , #realtimeFlag#, rec_key , #recReason# , #recReasonText# , rec_time 
		from <include refid="TB_REC_FILE_MULTI" />
		where call_id = #callId#
		and rec_time = (select max(rec_time) from <include refid="TB_REC_FILE_MULTI" /> where call_id = #callId# )
	</insert>
	
	<insert id="recInfo.registerGrandInfo" parameterClass="java.util.HashMap">
		/* ID :  recInfo.registerGrandInfo*/
		INSERT INTO TB_REC_GRANT
		(
			TENANT_ID, USER_ID,REC_KEY,START_DATE,END_DATE,INS_DATE,INS_ID,REASON,DOWNLOAD_FLAG
		)
		VALUES
		(
			#tenantId#,#userId#,#recKey#,#startDate#,#endDate#,sysdate,#insId#,#reason#,#downloadFlag#
		)
	</insert>
	
</sqlMap>