<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
 "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="recordFile">
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap" />
	
	<select id="recordFile.getNoSendRecFileIndexList" parameterClass="java.util.HashMap" resultClass="egovMap">
        <!-- (2023.08.17) TB_REC_FILE 테이블 쪼개기 작업 (HAGUANGHO) 
             (2023.08.22) TB_REC_FILE_INDEX 테이블 쪼개기 작업 (HAGUANGHO) -->
		/* ID : recordFile.getNoSendRecFileIndexList */
		select
				rec_key, tenant_id, rec_time, dn_no, user_id, RTRIM(CAST(media_voice AS CHAR(10))) as media_voice
				, RTRIM(CAST(media_scr AS CHAR(10))) as media_scr, media_kind, file_name
				, RTRIM(CAST(mrs_system_id AS CHAR(10))) as mrs_system_id, upload_kind
				, to_char(upload_date, 'YYYY-MM-DD HH24:MI:SS') as upload_date, store_drive
				, bk_label_id, bk_del_kind, to_char(del_time, 'YYYY-MM-DD HH24:MI:SS') as del_time
				, RTRIM(CAST(retry_count AS CHAR(10))) as retry_count, media_kind_name, upload_kind_name
				, rxrtpcnt, txrtpcnt, rxfilesize, txfilesize
			from
				(
				select 
						a.rec_key, a.tenant_id, a.rec_time, a.dn_no, a.user_id , nvl(a.media_voice,0) media_voice
						, nvl(a.media_scr,0) media_scr, c.media_kind, c.file_name
						, nvl(c.mrs_system_id,0) mrs_system_id, c.upload_kind, c.upload_date
						, c.store_drive, c.bk_label_id, c.bk_del_kind,c.del_time, nvl(c.retry_count,0) retry_count
					 	, (select code_name from tb_mng_basecode where class_id = 'media_kind' and code_id = c.media_kind) as media_kind_name
					 	, (select code_name from tb_mng_basecode where class_id = 'upload_class' and code_id = c.upload_kind) as upload_kind_name
					 	, c.rxrtpcnt, c.txrtpcnt, c.rxfilesize, c.txfilesize
					from <include refid="TB_REC_FILE_MULTI" /> a
						join <include refid="TB_REC_FILE_INDEX_MULTI" /> c
					 		on a.rec_key = c.rec_key
				<dynamic prepend="WHERE">
					<isNotEmpty prepend="AND" property="tenantId">			a.tenant_id = #tenantId#								</isNotEmpty>
					<isNotEmpty prepend="AND" property="findUserId">		a.user_id like '%' || #findUserId# || '%'				</isNotEmpty>
					<isNotNull  property="userid">			
						<isNotEmpty prepend="AND" property="userid">		a.user_id = #userid# 					</isNotEmpty>									
					</isNotNull>
					<isNotEmpty prepend="AND" property="findRecKey">		a.rec_key = #findRecKey#								</isNotEmpty>
					<isNotEmpty prepend="AND" property="findSRecTime">		a.rec_time between #findSRecTime# and #findERecTime#	</isNotEmpty>
					<isNotEmpty prepend="AND" property="findMediaKind">		c.media_kind = #findMediaKind#							</isNotEmpty>
					<isNotEmpty prepend="AND" property="findUploadKind"> 	c.upload_kind = #findUploadKind#						</isNotEmpty>
					<!-- <isEmpty prepend="AND" property="findUploadKind">	<![CDATA[ c.upload_kind <= #findNotUploadKind#	]]>	</isEmpty> -->
				</dynamic>
				) tbl1
		order by file_name
	</select>
	
	<select id="recordFile.getNoSendRecCount" parameterClass="java.util.HashMap" resultClass="egovMap">
        <!-- (2023.08.17) TB_REC_FILE 테이블 쪼개기 작업 (HAGUANGHO) 
             (2023.08.22) TB_REC_FILE_INDEX 테이블 쪼개기 작업 (HAGUANGHO) -->
		/* ID : recordFile.getNoSendRecCount */
        SELECT
            	COUNT(*) as cnt
        	FROM 
        		(
            	SELECT 
            			COUNT(*) cnt
						, rec_time, user_id, user_name, media_kind
                 		, SUM(row_cnt0) AS row_cnt0, SUM(row_cnt1) AS row_cnt1, SUM(row_cnt2) AS row_cnt2
                 		, SUM(row_cnt3) AS row_cnt3, SUM(row_cnt4) AS row_cnt4, SUM(row_cnt5) AS row_cnt5
                 		, SUM(row_cnt9) AS row_cnt9
              		FROM (
                    	SELECT 
                    			substr(a.rec_time, 1, 8) AS rec_time
                        		, b.USER_ID, b.USER_NAME, d.MEDIA_KIND
                         		, CASE WHEN d.UPLOAD_KIND = 0 THEN COUNT(1) ELSE 0 END AS row_cnt0
                         		, CASE WHEN d.UPLOAD_KIND = 1 THEN COUNT(1) ELSE 0 END AS row_cnt1
                         		, CASE WHEN d.UPLOAD_KIND = 2 THEN COUNT(1) ELSE 0 END AS row_cnt2
                         		, CASE WHEN d.UPLOAD_KIND = 3 THEN COUNT(1) ELSE 0 END AS row_cnt3
                         		, CASE WHEN d.UPLOAD_KIND = 4 THEN COUNT(1) ELSE 0 END AS row_cnt4
                         		, CASE WHEN d.UPLOAD_KIND BETWEEN 5 AND 6 THEN COUNT(1) ELSE 0 END AS row_cnt5
                         		, CASE WHEN d.UPLOAD_KIND = 9 THEN COUNT(1) ELSE 0 END AS row_cnt9
                      		FROM <include refid="TB_REC_FILE_MULTI" /> a
                      			JOIN TB_MNG_USERINFO b ON a.TENANT_ID = b.TENANT_ID AND a.USER_ID = b.USER_ID
                      			JOIN TB_MNG_GROUP c ON a.TENANT_ID = c.TENANT_ID AND a.GROUP_ID = c.GROUP_ID
                      			JOIN <include refid="TB_REC_FILE_INDEX_MULTI" /> d ON a.REC_KEY = d.REC_KEY
					  	<dynamic prepend="WHERE">
							<isNotEmpty prepend="AND" property="tenantId"> 		a.tenant_id = #tenantId# 						</isNotEmpty>
        			   		<isNotEmpty prepend="AND" property="findUserId"> 	a.user_id 	LIKE '%' || #findUserId# || '%' 	</isNotEmpty>
                        	<isNotNull  property="userid">
                        		<isNotEmpty prepend="AND" property="userid"> 	a.user_id 	LIKE '%' || #userid# || '%' 		</isNotEmpty>
                        	</isNotNull>
							<isNotEmpty prepend="AND"  property="findText">
								<isEqual property="findKey" compareValue="a.user_id">  a.user_id  		</isEqual>
								<isEqual property="findKey" compareValue="b.user_name">  b.user_name 	</isEqual>
								<isEqual property="findKey" compareValue="a.dn_no">  a.dn_no  			</isEqual>
								<isEqual property="findKey" compareValue="user_id">  a.user_id  		</isEqual>
								<isEqual property="findKey" compareValue="user_name">  b.user_name  	</isEqual>
								<isEqual property="findKey" compareValue="dn_no">  a.dn_no  			</isEqual>
								Like '%' || #findText# || '%'
							</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findDnNo"> 		a.dn_no 	LIKE #findDnNo# 							</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findCustName"> 	a.cust_name LIKE #findCustName# 						</isNotEmpty>
                       		<isNotEmpty prepend="AND" property="findCustNo"> 	a.cust_no 	LIKE #findCustNo# 							</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findCustTel"> 	a.cust_tel 	LIKE #findCustTel# 							</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findSRecTime"> 	a.REC_TIME BETWEEN #findSRecTime# AND #findERecTime# 	</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findMediaKind"> d.media_kind = #findMediaKind# 							</isNotEmpty>
							<isNotEmpty property="findGroupId">
								and	a.group_id in (
								SELECT group_id
								FROM tb_mng_group
								START WITH (tenant_id = #tenantId#
								AND GROUP_ID = #findGroupId#)
								CONNECT BY parent_id = PRIOR group_id
								AND tenant_id = #tenantId#
								)
							</isNotEmpty>
							<isNotEmpty property="controlAuth">
					            AND instr(#controlAuth#, C.GROUP_ID) > 0
					        </isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findTreeText"> c.group_id in
				 				<iterate property="findTreeText" open="(" conjunction="," close=")"> 	#findTreeText[]# 				</iterate>
				 			</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findUploadKind"> d.upload_kind = #findUploadKind# 						</isNotEmpty>
						</dynamic>
                     	GROUP BY substr(a.rec_time, 1, 8)
                        	, b.USER_ID, b.USER_NAME, d.MEDIA_KIND
                        	, d.UPLOAD_KIND
                   		) aa
             	GROUP BY rec_time, user_id, user_name, media_kind
           		) ff
	</select>

	<select id="recordFile.getNoSendRecList" parameterClass="java.util.HashMap" resultClass="egovMap">
        <!-- (2023.08.17) TB_REC_FILE 테이블 쪼개기 작업 (HAGUANGHO) 
             (2023.08.22) TB_REC_FILE_INDEX 테이블 쪼개기 작업 (HAGUANGHO) -->
		/* ID : recordFile.getNoSendRecList */
		SELECT 
				rec_time, user_id, user_name, media_kind, row_cnt0, row_cnt1, row_cnt2, row_cnt3, row_cnt4, row_cnt5, row_cnt9
    	 		,(select code_name from tb_mng_basecode where class_id = 'media_kind' and code_id = media_kind) as media_kind_name
			FROM(
				SELECT * FROM (
					SELECT
							ROW_NUMBER() OVER (ORDER BY rec_time, user_name DESC, media_kind DESC) RowNum2, TB_IN.*
						FROM (
                    		SELECT Row_Number() over (order by rec_time desc, user_name, media_kind) RowNum1
                        			, rec_time, user_id, user_name, media_kind
                        			, SUM(row_cnt0) AS row_cnt0, SUM(row_cnt1) AS row_cnt1, SUM(row_cnt2) AS row_cnt2
                        			, SUM(row_cnt3) AS row_cnt3, SUM(row_cnt4) AS row_cnt4, SUM(row_cnt5) AS row_cnt5
                        			, SUM(row_cnt9) AS row_cnt9
                      			FROM (
                            		SELECT 
                            				substr(a.rec_time, 1, 8) AS rec_time
                                 			, b.USER_ID, b.USER_NAME, d.MEDIA_KIND
                                 			, CASE WHEN d.UPLOAD_KIND = 0 THEN COUNT(1) ELSE 0 END AS row_cnt0
                                 			, CASE WHEN d.UPLOAD_KIND = 1 THEN COUNT(1) ELSE 0 END AS row_cnt1
                                 			, CASE WHEN d.UPLOAD_KIND = 2 THEN COUNT(1) ELSE 0 END AS row_cnt2
                                 			, CASE WHEN d.UPLOAD_KIND = 3 THEN COUNT(1) ELSE 0 END AS row_cnt3
                                 			, CASE WHEN d.UPLOAD_KIND = 4 THEN COUNT(1) ELSE 0 END AS row_cnt4
                                 			, CASE WHEN d.UPLOAD_KIND BETWEEN 5 AND 6 THEN COUNT(1) ELSE 0 END AS row_cnt5
                                 			, CASE WHEN d.UPLOAD_KIND = 9 THEN COUNT(1) ELSE 0 END AS row_cnt9
                              			FROM <include refid="TB_REC_FILE_MULTI" /> a 
                              				JOIN TB_MNG_USERINFO b ON a.TENANT_ID = b.TENANT_ID AND a.USER_ID = b.USER_ID
                              				JOIN TB_MNG_GROUP c ON a.TENANT_ID = c.TENANT_ID AND a.GROUP_ID = c.GROUP_ID
                              				JOIN <include refid="TB_REC_FILE_INDEX_MULTI" /> d ON a.REC_KEY = d.REC_KEY
                             		<dynamic prepend="WHERE">
                             			<isNotEmpty prepend="AND" property="tenantId"> 		a.tenant_id = #tenantId# 					</isNotEmpty>
                                		<isNotEmpty prepend="AND" property="findUserId"> 	a.user_id like '%' || #findUserId# || '%' 	</isNotEmpty>
                                		<isNotNull  property="userid">
                                			<isNotEmpty prepend="AND" property="userid"> 	a.user_id like '%' || #userid# || '%' 		</isNotEmpty>
                                		</isNotNull>
										<isNotEmpty prepend="AND"  property="findText">
											<isEqual property="findKey" compareValue="a.user_id">  a.user_id  </isEqual>
											<isEqual property="findKey" compareValue="b.user_name">  b.user_name </isEqual>
											<isEqual property="findKey" compareValue="a.dn_no">  a.dn_no  </isEqual>
											<isEqual property="findKey" compareValue="user_id">  a.user_id  </isEqual>
											<isEqual property="findKey" compareValue="user_name">  b.user_name  </isEqual>
											<isEqual property="findKey" compareValue="dn_no">  a.dn_no  </isEqual>
											Like '%' || #findText# || '%'
										</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findDnNo"> 		a.dn_no Like '%' || #findDnNo# || '%' 				</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findCustName"> 	a.cust_name Like '%' || #findCustName# || '%' 		</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findCustNo"> 	a.cust_no Like '%' || #findCustNo# || '%' 			</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findCustTel"> 	a.cust_tel Like '%' || #findCustTel# || '%' 		</isNotEmpty>
				                        <isNotEmpty prepend="AND" property="findSRecTime"> 	a.REC_TIME BETWEEN #findSRecTime# AND #findERecTime#</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findSEndTime"> 	<![CDATA[ a.end_time >= #findSEndTime# ]]> 			</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findEEndTime"> 	<![CDATA[ a.end_time <= #findEEndTime# ]]> 			</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findMediaKind"> d.media_kind	= #findMediaKind# 					</isNotEmpty>
										<isNotEmpty property="findGroupId">
											and	a.group_id in (
												SELECT group_id
												FROM tb_mng_group
												START WITH (tenant_id = #tenantId#
											AND GROUP_ID = #findGroupId#)
												CONNECT BY parent_id = PRIOR group_id
												AND tenant_id = #tenantId#
											)
										</isNotEmpty>
										<isNotEmpty property="controlAuth">
								            AND instr(#controlAuth#, C.GROUP_ID) > 0
								        </isNotEmpty>
										<isNotEmpty prepend="AND" property="findTreeText"> c.group_id in
						 					<iterate property="findTreeText" open="(" conjunction="," close=")"> 	#findTreeText[]# 			</iterate>
						 				</isNotEmpty>
                                		<isNotEmpty prepend="AND" property="findUploadKind"> d.upload_kind = #findUploadKind# 					</isNotEmpty>
                               		</dynamic>
                             		GROUP BY substr(a.rec_time, 1, 8)
                                 		, b.USER_ID, b.USER_NAME, d.MEDIA_KIND
                                 		, d.UPLOAD_KIND
                           		) aa
                     		GROUP BY rec_time, user_id, user_name, media_kind
                   			) TB_IN
						WHERE <![CDATA[ RowNum1 <= #iEPageNo# ]]>
					) TB_OUT
				WHERE <![CDATA[ RowNum2 <= #iSPageNo# ]]>
			) tbl2
		ORDER BY rec_time DESC, user_name , media_kind
	</select>
	<select id="recordFile.getNoSendRecCount_org" parameterClass="java.util.HashMap" resultClass="egovMap">
        <!-- (2023.08.17) TB_REC_FILE 테이블 쪼개기 작업, 기존 쿼리 백업인 것 같아 확인은 하지 않음 (HAGUANGHO) 
             (2023.08.22) TB_REC_FILE_INDEX 테이블 쪼개기 작업 (HAGUANGHO) -->
		/* ID : recordFile.getNoSendRecCount */
        SELECT
            	COUNT(*) as cnt
        	FROM
        		(
            	SELECT
            			COUNT(*) cnt
						, rec_time, user_id, user_name, media_kind
                 		, SUM(row_cnt0) AS row_cnt0, SUM(row_cnt1) AS row_cnt1, SUM(row_cnt2) AS row_cnt2
                 		, SUM(row_cnt3) AS row_cnt3, SUM(row_cnt4) AS row_cnt4, SUM(row_cnt5) AS row_cnt5
                 		, SUM(row_cnt9) AS row_cnt9
              		FROM (
                    	SELECT
                    			substr(a.rec_time, 1, 8) AS rec_time
                        		, b.USER_ID, b.USER_NAME, d.MEDIA_KIND
                         		, CASE WHEN d.UPLOAD_KIND = 0 THEN COUNT(1) ELSE 0 END AS row_cnt0
                         		, CASE WHEN d.UPLOAD_KIND = 1 THEN COUNT(1) ELSE 0 END AS row_cnt1
                         		, CASE WHEN d.UPLOAD_KIND = 2 THEN COUNT(1) ELSE 0 END AS row_cnt2
                         		, CASE WHEN d.UPLOAD_KIND = 3 THEN COUNT(1) ELSE 0 END AS row_cnt3
                         		, CASE WHEN d.UPLOAD_KIND = 4 THEN COUNT(1) ELSE 0 END AS row_cnt4
                         		, CASE WHEN d.UPLOAD_KIND BETWEEN 5 AND 6 THEN COUNT(1) ELSE 0 END AS row_cnt5
                         		, CASE WHEN d.UPLOAD_KIND = 9 THEN COUNT(1) ELSE 0 END AS row_cnt9
                      		FROM <include refid="TB_REC_FILE_MULTI" /> a
                      			JOIN TB_MNG_USERINFO b ON a.TENANT_ID = b.TENANT_ID AND a.USER_ID = b.USER_ID
                      			JOIN TB_MNG_GROUP c ON a.TENANT_ID = c.TENANT_ID AND a.GROUP_ID = c.GROUP_ID
                      			JOIN <include refid="TB_REC_FILE_INDEX_MULTI" /> d ON a.REC_KEY = d.REC_KEY
					  	<dynamic prepend="WHERE">
							<isNotEmpty prepend="AND" property="tenantId"> 		a.tenant_id = #tenantId# 						</isNotEmpty>
        			   		<isNotEmpty prepend="AND" property="findUserId"> 	a.user_id 	LIKE '%' || #findUserId# || '%' 	</isNotEmpty>
                        	<isNotNull  property="userid">
                        		<isNotEmpty prepend="AND" property="userid"> 	a.user_id 	LIKE '%' || #userid# || '%' 		</isNotEmpty>
                        	</isNotNull>
							<isNotEmpty prepend="AND"  property="findText">
								<isEqual property="findKey" compareValue="a.user_id">  a.user_id  		</isEqual>
								<isEqual property="findKey" compareValue="b.user_name">  b.user_name 	</isEqual>
								<isEqual property="findKey" compareValue="a.dn_no">  a.dn_no  			</isEqual>
								<isEqual property="findKey" compareValue="user_id">  a.user_id  		</isEqual>
								<isEqual property="findKey" compareValue="user_name">  b.user_name  	</isEqual>
								<isEqual property="findKey" compareValue="dn_no">  a.dn_no  			</isEqual>
								Like '%' || #findText# || '%'
							</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findDnNo"> 		a.dn_no 	LIKE #findDnNo# 							</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findCustName"> 	a.cust_name LIKE #findCustName# 						</isNotEmpty>
                       		<isNotEmpty prepend="AND" property="findCustNo"> 	a.cust_no 	LIKE #findCustNo# 							</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findCustTel"> 	a.cust_tel 	LIKE #findCustTel# 							</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findSRecTime"> 	a.REC_TIME BETWEEN #findSRecTime# AND #findERecTime# 	</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findMediaKind"> d.media_kind = #findMediaKind# 							</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findGroupId"> 	c.depth 	LIKE #findGroupId# || '%' 					</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findTreeText"> c.group_id in
				 				<iterate property="findTreeText" open="(" conjunction="," close=")"> 	#findTreeText[]# 				</iterate>
				 			</isNotEmpty>
                        	<isNotEmpty prepend="AND" property="findUploadKind"> d.upload_kind = #findUploadKind# 						</isNotEmpty>
						</dynamic>
                     	GROUP BY substr(a.rec_time, 1, 8)
                        	, b.USER_ID, b.USER_NAME, d.MEDIA_KIND
                        	, d.UPLOAD_KIND
                   		) aa
             	GROUP BY rec_time, user_id, user_name, media_kind
           		) ff
	</select>

	<select id="recordFile.getNoSendRecList_org" parameterClass="java.util.HashMap" resultClass="egovMap">
        <!-- (2023.08.17) TB_REC_FILE 테이블 쪼개기 작업, 기존 쿼리 백업인 것 같아 확인은 하지 않음 (HAGUANGHO) 
             (2023.08.22) TB_REC_FILE_INDEX 테이블 쪼개기 작업 (HAGUANGHO) -->
		/* ID : recordFile.getNoSendRecList */
		SELECT
				rec_time, user_id, user_name, media_kind, row_cnt0, row_cnt1, row_cnt2, row_cnt3, row_cnt4, row_cnt5, row_cnt9
    	 		,(select code_name from tb_mng_basecode where class_id = 'media_kind' and code_id = media_kind) as media_kind_name
			FROM(
				SELECT * FROM (
					SELECT
							ROW_NUMBER() OVER (ORDER BY rec_time, user_name DESC, media_kind DESC) RowNum2, TB_IN.*
						FROM (
                    		SELECT Row_Number() over (order by rec_time desc, user_name, media_kind) RowNum1
                        			, rec_time, user_id, user_name, media_kind
                        			, SUM(row_cnt0) AS row_cnt0, SUM(row_cnt1) AS row_cnt1, SUM(row_cnt2) AS row_cnt2
                        			, SUM(row_cnt3) AS row_cnt3, SUM(row_cnt4) AS row_cnt4, SUM(row_cnt5) AS row_cnt5
                        			, SUM(row_cnt9) AS row_cnt9
                      			FROM (
                            		SELECT
                            				substr(a.rec_time, 1, 8) AS rec_time
                                 			, b.USER_ID, b.USER_NAME, d.MEDIA_KIND
                                 			, CASE WHEN d.UPLOAD_KIND = 0 THEN COUNT(1) ELSE 0 END AS row_cnt0
                                 			, CASE WHEN d.UPLOAD_KIND = 1 THEN COUNT(1) ELSE 0 END AS row_cnt1
                                 			, CASE WHEN d.UPLOAD_KIND = 2 THEN COUNT(1) ELSE 0 END AS row_cnt2
                                 			, CASE WHEN d.UPLOAD_KIND = 3 THEN COUNT(1) ELSE 0 END AS row_cnt3
                                 			, CASE WHEN d.UPLOAD_KIND = 4 THEN COUNT(1) ELSE 0 END AS row_cnt4
                                 			, CASE WHEN d.UPLOAD_KIND BETWEEN 5 AND 6 THEN COUNT(1) ELSE 0 END AS row_cnt5
                                 			, CASE WHEN d.UPLOAD_KIND = 9 THEN COUNT(1) ELSE 0 END AS row_cnt9
                              			FROM <include refid="TB_REC_FILE_MULTI" /> a
                              				JOIN TB_MNG_USERINFO b ON a.TENANT_ID = b.TENANT_ID AND a.USER_ID = b.USER_ID
                              				JOIN TB_MNG_GROUP c ON a.TENANT_ID = c.TENANT_ID AND a.GROUP_ID = c.GROUP_ID
                              				JOIN <include refid="TB_REC_FILE_INDEX_MULTI" /> d ON a.REC_KEY = d.REC_KEY
                             		<dynamic prepend="WHERE">
                             			<isNotEmpty prepend="AND" property="tenantId"> 		a.tenant_id = #tenantId# 					</isNotEmpty>
                                		<isNotEmpty prepend="AND" property="findUserId"> 	a.user_id like '%' || #findUserId# || '%' 	</isNotEmpty>
                                		<isNotNull  property="userid">
                                			<isNotEmpty prepend="AND" property="userid"> 	a.user_id like '%' || #userid# || '%' 		</isNotEmpty>
                                		</isNotNull>
										<isNotEmpty prepend="AND"  property="findText">
											<isEqual property="findKey" compareValue="a.user_id">  a.user_id  </isEqual>
											<isEqual property="findKey" compareValue="b.user_name">  b.user_name </isEqual>
											<isEqual property="findKey" compareValue="a.dn_no">  a.dn_no  </isEqual>
											<isEqual property="findKey" compareValue="user_id">  a.user_id  </isEqual>
											<isEqual property="findKey" compareValue="user_name">  b.user_name  </isEqual>
											<isEqual property="findKey" compareValue="dn_no">  a.dn_no  </isEqual>
											Like '%' || #findText# || '%'
										</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findDnNo"> 		a.dn_no Like '%' || #findDnNo# || '%' 				</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findCustName"> 	a.cust_name Like '%' || #findCustName# || '%' 		</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findCustNo"> 	a.cust_no Like '%' || #findCustNo# || '%' 			</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findCustTel"> 	a.cust_tel Like '%' || #findCustTel# || '%' 		</isNotEmpty>
				                        <isNotEmpty prepend="AND" property="findSRecTime"> 	a.REC_TIME BETWEEN #findSRecTime# AND #findERecTime#</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findSEndTime"> 	<![CDATA[ a.end_time >= #findSEndTime# ]]> 			</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findEEndTime"> 	<![CDATA[ a.end_time <= #findEEndTime# ]]> 			</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findMediaKind"> d.media_kind	= #findMediaKind# 					</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findGroupId"> 	c.depth Like '' || #findGroupId# || '%' 			</isNotEmpty>
		                                <isNotEmpty prepend="AND" property="findTreeText"> c.group_id in
						 					<iterate property="findTreeText" open="(" conjunction="," close=")"> 	#findTreeText[]# 			</iterate>
						 				</isNotEmpty>
                                		<isNotEmpty prepend="AND" property="findUploadKind"> d.upload_kind = #findUploadKind# 					</isNotEmpty>
                               		</dynamic>
                             		GROUP BY substr(a.rec_time, 1, 8)
                                 		, b.USER_ID, b.USER_NAME, d.MEDIA_KIND
                                 		, d.UPLOAD_KIND
                           		) aa
                     		GROUP BY rec_time, user_id, user_name, media_kind
                   			) TB_IN
						WHERE <![CDATA[ RowNum1 <= #iEPageNo# ]]>
					) TB_OUT
				WHERE <![CDATA[ RowNum2 <= #iSPageNo# ]]>
			) tbl2
		ORDER BY rec_time DESC, user_name , media_kind
	</select>

	<update id="recordFile.setRecFileMemoUpdate" parameterClass="java.util.HashMap">
	   <!-- (2023.08.18) TB_REC_FILE 테이블 마킹 등록/삭제 작업 및 조회 쿼리 수정 (HAGUANGHO) -->
		/* ID : recordFile.setRecFileMemoUpdate */
		update <include refid="TB_REC_FILE_MULTI" /> set	
			cust_etc9    = #custEtc9#
			, cust_etc10 = #custEtc10#
		where rec_key    = #recKey#
	</update>
	
	<select id="recordFile.getRecFileList" parameterClass="java.util.HashMap" resultClass="egovMap">
        <!-- (2023.08.17) TB_REC_FILE 테이블 쪼개기 작업 (HAGUANGHO) -->
		/* ID : recordFile.getRecFileList */
		select * 
			from(
				select 
						distinct substr(t1.rec_time,1,8) rec_time, t1.rec_time rec_time_term, t1.dn_no, t1.group_id, t1.user_id, t2.group_name
					from <include refid="TB_REC_FILE_MULTI" /> t1
						left join tb_mng_group t2 
							on t1.tenant_id = t2.tenant_id 
							and t1.group_id = t2.group_id
				where 1=1
					and t1.tenant_id = #tenantId#
					and (t1.user_id is null or t1.user_id = '')
					and t1.search_visible = '1'
					<isNotEmpty prepend="AND" property="findSRecTime"> 	t1.rec_time between #findSRecTime# and #findERecTime#	</isNotEmpty>
					<isNotEmpty prepend="AND" property="findDnNo"> 		t1.dn_no Like '%' || #findDnNo# || '%'					</isNotEmpty>
				) a 
				left outer join (	
					select 
							distinct min(t1.rec_time) min_rec_time, max(t1.rec_time) max_rec_time
							, t1.dn_no dn_no_bat, t1.user_id user_id_bat, t2.user_name user_name_bat
						from <include refid="TB_REC_FILE_MULTI_2" /> t1
							left join tb_mng_userinfo t2 
								on t1.tenant_id = t2.tenant_id 
								and t1.user_id = t2.user_id
					where 1=1
					<![CDATA[
						and t1.tenant_id = #tenantId#
						and (t1.user_id is not null or t1.user_id != '')
						and t1.search_visible = '1'
						and t1.rec_time >  #findBefTime#
						and t1.rec_time <= #findSRecTime#
					]]>
					group by t1.dn_no, t1.user_id, t2.user_name
				) b on a.dn_no = b.dn_no_bat
		order by dn_no, rec_time_term
	</select>
	
	<select id="recordFile.getRecFileCallList" parameterClass="java.util.HashMap" resultClass="egovMap">
        <!-- (2023.08.17) TB_REC_FILE 테이블 쪼개기 작업 (HAGUANGHO) -->
		/* ID : recordFile.getRecFileCallList */
		select 
				t1.rec_key, t1.tenant_id, t1.rec_time, t1.dn_no, t1.group_id
				, t2.group_name, t1.call_id, t1.call_kind
			from <include refid="TB_REC_FILE_MULTI" /> t1 
				join tb_mng_group t2 
					on t1.tenant_id = t2.tenant_id 
					and t1.group_id = t2.group_id
		where 1=1 
			and t1.tenant_id = #tenantId#
			and (t1.user_id is null or t1.user_id = '')
			and t1.search_visible = '1'
			and t1.rec_time between #startDate# and #endDate#
			and t1.dn_no = #dnNo#
		order by rec_time
	</select>
	
	<update id="recordFile.setRecFileUserIdUpdate" parameterClass="java.util.HashMap">
		<!-- (2023.08.18) 상담원일괄변경 시 TB_REC_FILE 테이블 동적 설정을 위한 파라미터 설정 (HAGUANGHO) -->
		/* ID : recordFile.setRecFileUserIdUpdate */
		update <include refid="TB_REC_FILE_MULTI" /> set	
			user_id = #userId#
		where 1=1
			and tenant_id = #tenantId#
			and (user_id is null or user_id = '')
			and search_visible = '1'
			and rec_time between #findSRecTime# and #findERecTime#
			and dn_no = #dnNo#
	</update>
	
	<update id="recordFile.setRecFileCallUserIdUpdate" parameterClass="java.util.HashMap">
        <!-- (2023.08.18) 상담원일괄변경상세 일괄변경 시 TB_REC_FILE 테이블 동적 설정을 위한 파라미터 설정 (HAGUANGHO) -->
		/* ID : recordFile.setRecFileCallUserIdUpdate */
		update <include refid="TB_REC_FILE_MULTI" /> set	
			user_id = #userId#
		where 1=1
			and (user_id is null or user_id = '')
			and search_visible = '1'
			and rec_key = #recKey#
	</update>
	
	<select id="recordFile.getMaxMarkingId" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : recordFile.getMaxMarkingId */
		select nvl(max(marking_id),0)+1 marking_id
			FROM tb_rec_markcode
		where tenant_id = #tenantId#
	</select>
	
	<select id="recordFile.getMarkCodeList" parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ID : recordFile.getMarkCodeList */
		select 
				tenant_id, marking_id, marking_class, marking_color, marking_desc
			from tb_rec_markcode
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="findTenantId">
				tenant_id = #findTenantId#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="findText">
				marking_class Like '%' || #findText# || '%'
			</isNotEmpty>
		</dynamic>
		order by tenant_id, marking_id
	</select>
	
	<insert id="recordFile.setMarkCodeInsert" parameterClass="java.util.HashMap">
		/* ID : recordFile.setMarkCodeInsert */
		insert into tb_rec_markcode
			(
			tenant_id, marking_id, marking_class, marking_color, marking_desc
			) 
		values 
			(
			#tenantId#, #markingId#, #markingClass#, #markingColor#, #markingDesc#
			)
	</insert>
	
	<update id="recordFile.setMarkCodeUpdate" parameterClass="java.util.HashMap">
		/* ID : recordFile.setMarkCodeUpdate */
		update tb_rec_markcode set 
			marking_class  = #markingClass#
			,marking_color = #markingColor#
			,marking_desc  = #markingDesc#
		where tenant_id    = #tenantId#
			and marking_id = #markingId#
	</update>
	
	<delete id="recordFile.setMarkCodeDelete" parameterClass="java.util.HashMap" >
		/* ID : recordFile.setMarkCodeDelete */
		delete 
			from tb_rec_markcode
		where tenant_id    = #tenantId#
			and marking_id = #markingId#
	</delete>
	
	<select id="recordFile.getRecGrant" parameterClass="java.util.HashMap" resultClass="egovMap">
	/* ID : recordFile.getRecGrant*/
	SELECT * FROM TB_REC_GRANT
	WHERE TENANT_ID = #tenantId# AND USER_ID=#userId# AND REC_KEY=#recKey#
	/*만료일 비교 조건추가*/
	</select>
	
	<update id="recordFile.updateRecFile" parameterClass="java.util.HashMap">
		/* ID : recordFile.updateRecFile */
		UPDATE TB_REC_FILE
		SET 
		  CALL_ID     = #callId#,
		  CUST_NAME   = #custName#,
		  CUST_TEL    = #custTel#,
		  CUST_NO     = #custNo#,
		  CUST_ETC1   = #etc_1#,
		  CUST_ETC2   = #etc_2#,
		  CUST_ETC3   = #etc_3#,
		  CUST_ETC4   = #etc_4#,
		  CUST_ETC5   = #etc_5#,
		  CUST_ETC6   = #etc_6#,
		  CUST_ETC7   = #etc_7#,
		  CUST_ETC8   = #etc_8#,
		  CUST_ETC9   = #etc_9#,
		  CUST_ETC10  = #etc_10#
		WHERE 
		  REC_KEY    = #recKey# OR CALL_ID = #callId#
	</update>
	
	<select id="recordFile.getRecSendDetailListCnt" parameterClass="java.util.HashMap" resultClass="egovMap">
        <!-- (2023.08.17) TB_REC_FILE 테이블 쪼개기 작업 (HAGUANGHO) 
             (2023.08.22) TB_REC_FILE_INDEX 테이블 쪼개기 작업 (HAGUANGHO) -->
		/* ID : recordFile.getRecSendDetailListCnt */
			SELECT  COUNT(*) AS CNT
		 FROM <include refid="TB_REC_FILE_MULTI" /> A
			INNER JOIN <include refid="TB_REC_FILE_INDEX_MULTI" /> B
       			ON A.REC_KEY= B.REC_KEY
			WHERE 
				<isEqual property="findTS" compareValue="1">
				<!-- 1 -->
					<![CDATA[	A.REC_TIME >=	#txtDate1_From# || #findSRegTime# ]]> 
					AND <![CDATA[	A.REC_TIME <=	#txtDate1_To# || #findERegTime# ]]>
				</isEqual>	
				<isNotEqual property="findTS" compareValue="1">									
				<!-- 2 -->	
					<![CDATA[	SUBSTR(A.REC_TIME, 1, 8) >=	#txtDate1_From# ]]> 
					AND <![CDATA[	SUBSTR(A.REC_TIME, 1, 8) <=	#txtDate1_To# ]]>
					AND <![CDATA[	SUBSTR(A.REC_TIME, 9, 6) >=	#findSRegTime# ]]> 
					AND <![CDATA[	SUBSTR(A.REC_TIME, 9, 6) <=	#findERegTime# ]]>
				</isNotEqual>
				AND A.TENANT_ID = #findTenantId#
				
				<isNotEmpty prepend="AND" property="findSearchVisible">
					A.SEARCH_VISIBLE = #findSearchVisible# 
				</isNotEmpty>
				<!-- <isNotEmpty prepend="AND" property="findDnNo">
					A.DN_NO Like '%' || #findDnNo# || '%'
				</isNotEmpty> -->
				<isNotEmpty prepend="AND" property="findUploadKind">
					B.UPLOAD_KIND = #findUploadKind# 
				</isNotEmpty>
				<isNotEmpty prepend="AND"  property="findText">	
					<isEqual property="findSearch" compareValue="dn_no">		A.DN_NO		like '%' || #findText# || '%'	</isEqual>
					<isEqual property="findSearch" compareValue="user_id">		A.USER_ID 	like '%' || #findText# || '%'	</isEqual>
					<isEqual property="findSearch" compareValue="user_name">	C.USER_NAME like '%' || #findText# || '%'	</isEqual>
				</isNotEmpty>
				ORDER BY A.REC_TIME ASC
			
	</select>
	
	 
	<select id="recordFile.getRecSendDetailList" parameterClass="java.util.HashMap" resultClass="egovMap">
        <!-- (2023.08.17) TB_REC_FILE 테이블 쪼개기 작업 (HAGUANGHO) 
             (2023.08.22) TB_REC_FILE_INDEX 테이블 쪼개기 작업 (HAGUANGHO) -->	
		/* ID : recordFile.getRecSendDetailList */
      SELECT  REC_TIME
			, UPLOAD_KIND 
			, UPLOAD_KIND_STR
			, TENANT_ID
			, DN_NO 
			, REC_KEY 
			, USER_ID 
			, USER_NAME
			, CALL_ID 
			, END_TIME
			, CUST_TEL
			, SEARCH_VISIBLE
			, CALL_TIME
			, RXRTPCNT
			, RXFILESIZE
			, TXRTPCNT
			, TXFILESIZE
			FROM(
				SELECT * FROM (
					SELECT
							ROW_NUMBER() OVER (ORDER BY REC_TIME) RowNum2, TB_IN.*
						FROM (
                    		SELECT Row_Number() over (order by A.REC_TIME DESC) RowNum1
			, TO_CHAR(TO_DATE(A.REC_TIME, 'YYYYMMDDHH24MISS'), 'YYYY/MM/DD HH24:MI:SS') AS REC_TIME
			, B.UPLOAD_KIND 
			, D.CODE_NAME AS UPLOAD_KIND_STR
			, A.TENANT_ID
			, A.DN_NO 
			, A.REC_KEY 
			, A.USER_ID 
			, C.USER_NAME
			, A.CALL_ID 
			, A.END_TIME
			, A.CUST_TEL
			, A.SEARCH_VISIBLE
			, B.CALL_TIME
			, B.RXRTPCNT
			, B.RXFILESIZE
			, B.TXRTPCNT
			, B.TXFILESIZE
		 FROM <include refid="TB_REC_FILE_MULTI" /> A
			INNER JOIN <include refid="TB_REC_FILE_INDEX_MULTI" /> B
       			ON A.REC_KEY= B.REC_KEY
       		LEFT OUTER JOIN TB_MNG_USERINFO C
       			ON A.USER_ID = C.USER_ID
       			AND A.TENANT_ID = C.TENANT_ID
       		LEFT OUTER JOIN TB_MNG_BASECODE D
       			ON D.CLASS_ID = 'upload_class'
       			AND D.CODE_ID = B.UPLOAD_KIND
			WHERE
			<isEqual property="findTS" compareValue="1">
				<!-- 1 -->
					<![CDATA[	A.REC_TIME >=	#txtDate1_From# || #findSRegTime# ]]> 
					AND <![CDATA[	A.REC_TIME <=	#txtDate1_To# || #findERegTime# ]]>
				</isEqual>	
				<isNotEqual property="findTS" compareValue="1">									
				<!-- 2 -->	
					<![CDATA[	SUBSTR(A.REC_TIME, 1, 8) >=	#txtDate1_From# ]]> 
					AND <![CDATA[	SUBSTR(A.REC_TIME, 1, 8) <=	#txtDate1_To# ]]>
					AND <![CDATA[	SUBSTR(A.REC_TIME, 9, 6) >=	#findSRegTime# ]]> 
					AND <![CDATA[	SUBSTR(A.REC_TIME, 9, 6) <=	#findERegTime# ]]>
				</isNotEqual>
				AND A.TENANT_ID = #findTenantId#
				<isNotEmpty prepend="AND" property="findSearchVisible">
					A.SEARCH_VISIBLE = #findSearchVisible# 
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="findUploadKind">
					B.UPLOAD_KIND = #findUploadKind# 
				</isNotEmpty>
				<isNotEmpty prepend="AND"  property="findText">	
					<isEqual property="findSearch" compareValue="dn_no">		A.DN_NO		like '%' || #findText# || '%'	</isEqual>
					<isEqual property="findSearch" compareValue="user_id">		A.USER_ID 	like '%' || #findText# || '%'	</isEqual>
					<isEqual property="findSearch" compareValue="user_name">	C.USER_NAME like '%' || #findText# || '%'	</isEqual>
				</isNotEmpty>
				
				
					ORDER BY A.REC_TIME DESC 
                   			) TB_IN
						WHERE <![CDATA[ RowNum1 <= #iEPageNo# ]]>
					) TB_OUT
				WHERE <![CDATA[ RowNum2 <= #iSPageNo# ]]>
			) tbl2
		ORDER BY rec_time DESC
	</select>
	
	
	<select id="recordFile.getRecSendDetailStat"  parameterClass="java.util.HashMap" resultClass="egovMap">
        <!-- (2023.08.17) TB_REC_FILE 테이블 쪼개기 작업 (HAGUANGHO) 
             (2023.08.22) TB_REC_FILE_INDEX 테이블 쪼개기 작업 (HAGUANGHO) -->
select b.upload_kind, count(b.upload_kind) as cnt
, c.code_name upload_kind_str
	 from <include refid="TB_REC_FILE_MULTI" /> a,
 <include refid="TB_REC_FILE_INDEX_MULTI" /> b
 left outer join tb_mng_basecode c
 on b.upload_kind = c.code_id
 and c.class_id=  'upload_class'
 where a.rec_time  between #txtDate1_From# || '00' and #txtDate1_To# || '99'
 AND A.TENANT_ID = #findTenantId#
 and a.rec_key = b.rec_key
 				<isNotEmpty prepend="AND"  property="findText">	
					<isEqual property="findSearch" compareValue="dn_no">		A.DN_NO		like '%' || #findText# || '%'	</isEqual>
					<isEqual property="findSearch" compareValue="user_id">		A.USER_ID 	like '%' || #findText# || '%'	</isEqual>
					<isEqual property="findSearch" compareValue="user_name">	C.USER_NAME like '%' || #findText# || '%'	</isEqual>
				</isNotEmpty>
				
 group by b.upload_kind, c.code_name
 </select>

	<select id="recordFile.getAPIConstList" parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT  REC_TIME
		, USER_ID
		, DN_NO
		, GROUP_ID
		, GROUP_NAME
		, CALL_ID AS DB_CALL_ID
		, CALL_ID AS API_CALL_ID
		, CALL_TYPE
		, CUST_NAME
		, CUST_TEL
		, CALL_KIND
		FROM(
			SELECT * FROM (
				SELECT
					ROW_NUMBER() OVER (ORDER BY REC_TIME) RowNum2, TB_IN.*
				FROM (
					SELECT Row_Number() over (order by REC_TIME DESC) RowNum1
					FROM(
						SELECT A.REC_TIME
						  , A.USER_ID
						  , A.DN_NO
						  , A.GROUP_ID
						  , C.GROUP_NAME
						  , A.CALL_ID AS DB_CALL_ID
						  , B.CALL_ID AS API_CALL_ID
						  , B.CALL_TYPE
						  , A.CUST_NAME
						  , A.CUST_TEL
						  , A.CALL_KIND
						FROM TB_REC_FILE A
						LEFT OUTER JOIN TB_API_CONST B
						ON A.CALL_ID = B.CALL_ID
						LEFT OUTER JOIN TB_MNG_GROUP C
						ON A.GROUP_ID = C.GROUP_ID
						AND C.TENANT_ID = #findTenantId#
						WHERE A.tenant_id = #findTenantId#
						<isNotEmpty prepend="AND" property="findSRecTime"> 	A.REC_TIME BETWEEN #findSRecTime# AND #findERecTime# 	</isNotEmpty>

						ORDER BY A.REC_TIME DESC
					) TB_IN
					WHERE <![CDATA[ RowNum1 <= #iEPageNo# ]]>
				) TB_OUT
				WHERE <![CDATA[ RowNum2 <= #iSPageNo# ]]>
			) tbl2
		ORDER BY rec_time DESC
	</select>
	<select id="recordFile.getAPIConstListCnt" parameterClass="java.util.HashMap" resultClass="egovMap">
		select count(*) as cnt from (
		SELECT A.REC_TIME
		  , A.USER_ID
		  , A.DN_NO
		  , A.GROUP_ID
		  , C.GROUP_NAME
		  , A.CALL_ID
		  , B.CALL_ID
		  , B.CALL_TYPE
		  , A.CUST_NAME
		  , A.CUST_TEL
		  , A.CALL_KIND
		FROM TB_REC_FILE A
		LEFT OUTER JOIN TB_API_CONST B
		ON A.CALL_ID = B.CALL_ID
		LEFT OUTER JOIN TB_MNG_GROUP C
		ON A.GROUP_ID = C.GROUP_ID
		AND C.TENANT_ID = #findTenantId#
		WHERE  A.tenant_id = #findTenantId#
		<isNotEmpty prepend="AND" property="findSRecTime"> 	A.REC_TIME BETWEEN #findSRecTime# AND #findERecTime# 	</isNotEmpty>

		ORDER BY A.REC_TIME DESC)

	</select>
	
	
	<select id="recSearchHash.getRecFileHashList" parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT 
			A.TENANT_ID 		
			,B.TENANT_NAME
			,A.DOWNLOAD_DT
			,FN_CM_STRING_FORMAT(A.DOWNLOAD_DT, '@@@@-@@-@@ @@:@@:@@') AS DOWNLOAD_DATE 	
			,FN_CM_GET_AGENT_INFO(A.TENANT_ID, A.DOWNLOAD_USER_ID) AS DOWNLOAD_USER_INFO
			,A.REC_KEY 		
			,A.CALL_ID 			
			,A.FILE_NAME 			
			,A.HASH_VALUE 			
		FROM TB_REC_FILEHASH A INNER JOIN TB_MNG_COMPANY B
		ON A.TENANT_ID = B.TENANT_ID
		WHERE 1=1
		AND DOWNLOAD_USER_ID NOT IN ('AICC', 'VAS')
		<isNotEmpty prepend="AND" property="findTenantId">
			A.TENANT_ID = #findTenantId#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="txtDate1_From">
			SUBSTR(A.DOWNLOAD_DT, 1 ,8) BETWEEN #txtDate1_From# AND #txtDate1_To#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="findUserNameText">
			A.DOWNLOAD_USER_ID = #findUserNameText#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="callId">
			A.CALL_ID LIKE '%' || #callId# || '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="fileNm">
			A.FILE_NAME LIKE '%' || #fileNm# || '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="fileHash">
			A.HASH_VALUE LIKE '%' || #fileHash# || '%'
		</isNotEmpty>
		ORDER BY DOWNLOAD_DT, FN_CM_GET_AGENT_INFO(A.TENANT_ID, A.DOWNLOAD_USER_ID),A.FILE_NAME  DESC
	</select>

</sqlMap>